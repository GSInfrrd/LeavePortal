@model List<LMS_WebAPP_Domain.LeaveTransaction>
@{
    ViewBag.Title = "LeaveTransaction";
    var data = (LMS_WebAPP_Domain.UserAccount)Session[LMS_WebAPP_Utils.Constants.SESSION_OBJ_USER];
    var toTalcasualLeave = data.TotalCasualLeave;
    var sickLeaveType = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave));
    var CompoLeavetype = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff));
    var refLeaveTypeCasual = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave));
    var LeaveStatusIn = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveStatus.Approved));
    var advanceLeaveType = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave));
    var LeaveCasualSubmitted = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveStatus.Submitted));
    var totalCasualSubmitted = (from n in Model where (n.RefLeaveType == refLeaveTypeCasual || n.RefLeaveType == advanceLeaveType) && n.RefStatus == LeaveCasualSubmitted select n).ToList().Count();
    var totalCombboSubmitted = (from n in Model where n.RefLeaveType == CompoLeavetype && n.RefStatus == LeaveCasualSubmitted select n).ToList().Count();
    var totalLOPSubmitted = Model.Where(i => i.RefLeaveType == (int)LMS_WebAPP_Utils.LeaveType.LOP && i.RefStatus == (int)LMS_WebAPP_Utils.LeaveStatus.Submitted).ToList().Count();
    var totalLOPCap = data.TotalLOPLImit;
    var totalLOPLeft = data.LOPRemaining;
    var newDay = DateTime.Now.Date;
    var totalAdvanceLeaveLeft = data.TotalAdvanceLeaveTotake;
    //var advanceLeaveLimit = 6;
    var totalCasualApproved = (from n in Model where n.RefLeaveType == refLeaveTypeCasual && n.RefStatus == LeaveStatusIn select n.NumberOfWorkingDays).ToList().Sum();
    var TotalSickLeaveToday = (from n in Model where n.RefLeaveType == sickLeaveType && n.FromDate == newDay select n.NumberOfWorkingDays).ToList().Sum();
    var ComboDateList = (from n in Model where n.RefLeaveType == CompoLeavetype select n.FromDate).ToList();
    double isSickApplied = 1;
    var totalCasualLeaveLeft = toTalcasualLeave;// 2;// toTalcasualLeave - totalCasualApproved;
    var totalLeft = 1;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    if (totalLeft <= 0)
    {
        totalLeft = 0;
    }
    if (TotalSickLeaveToday >= 1)
    {
        isSickApplied = 0;
    }
}

<style>
    .toglediv {
        background-color: white;
        padding: 25px;
    }

    .labelPaddingCasual {
        padding-right: 17px;
    }

    .labelPaddingSick {
        padding-right: 4px;
    }

    .labelPaddingLOP {
        padding-right: 73px;
    }

    .inputTextLeaves {
        width: 50px;
    }

    .fromDatePadding {
        padding-left: 32px;
    }

    .pagination > .active > a,
    .pagination > .active > span,
    .pagination > .active > a:hover,
    .pagination > .active > span:hover,
    .pagination > .active > a:focus,
    .pagination > .active > span:focus {
        z-index: 3;
        color: #fff;
        cursor: default;
        background-color: black !important;
        border-color: black !important;
    }
</style>
<!-- Font Awesome -->
<link rel="stylesheet" href="../../plugins/datatables/dataTables.bootstrap.css">
<!-- iCheck for checkboxes and radio inputs -->
<link href="~/plugins/loader/jquery.loading.min.css" rel="stylesheet" />
<link rel="stylesheet" href="../../plugins/iCheck/all.css">
<link href="~/plugins/Toastr/toastr.css" rel="stylesheet" />
<link href="~/plugins/BootstrapToggle/bootstrap-toggle.min.css" rel="stylesheet" />

<section class="content-header" style="height:41px">
    <h1 class="col-md-9" style="padding-left:0px">
        Leave Details
    </h1>
    <div style="float:right;padding-right:0px" class="col-md-2">
        <button type="button" id="btnaddleave" class="btn btn-block bg-black" data-toggle="modal" data-target=".bs-add-leave-modal" style="background-color:#222d32 !important"><i class="fa fa-plus"></i>&nbsp; Add Leave </button>

    </div>
</section>

<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-body" id="tblAppliedLeave">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>From Date</th>
                                <th>To Date</th>
                                <th>Submitted Date</th>
                                <th>Status</th>
                                <th style="width:160px">Number of Working Days</th>
                                <th>Leave Type</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (LMS_WebAPP_Domain.LeaveTransaction m in Model)
                            {
                                var btnDisabled = m.RefStatus > 9 ? "disabled" : "";


                                <tr>
                                    <td>@m.FromDate.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@m.ToDate.Date.ToString("dd/MM/yyyy")</td>
                                    <td>@m.CreatedDate.Date.ToString("dd/MM/yyyy")</td>

                                    <td>@(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveStatus)m.RefStatus))</td>
                                    <td>@m.NumberOfWorkingDays</td>
                                    <td>@(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveType)m.RefLeaveType))</td>

                                    @if (m.RefStatus != Convert.ToInt16(LMS_WebAPP_Utils.LeaveStatus.Approved))
                                    {
                                        <td>
                                            <a href="#" id="btnDeleteLeave" style="color:red" data-content="@m.Id">
                                                <span class="fa fa-close"></span>
                                            </a>

                                        </td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                </tr>


                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<div id="loader"></div><div id="ajaxloader" style="display:none">
    <img src="~/Content/Images/loadingAjax.gif" />
</div>
<div class="modal bs-add-leave-modal" id="AddLeaveModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 681px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Apply Leave</h4>
            </div>
            <div class="modal-body">
                <div class="form-group" style="padding-bottom:20px">

                    <div>
                        <label>Leave Type</label>
                    </div>
                    <span class="form-group has-error" style="display:none" id="divLeaveTypeError">
                        <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> Please select leave type:
                        </label>
                    </span>

                    <div id="rddiv">
                        @foreach (var value in Enum.GetValues(typeof(LMS_WebAPP_Utils.LeaveType)))
                        {
                            var disabledAttr = "";
                            if (Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.AdvanceLeave) == @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value) ||
                                Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.LOP) == @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value))
                            {
                                disabledAttr = "disabled";
                            }
                            <div class="col-md-3" style="margin-top:3px">
                                <input type="radio" name="r1" id="RdLeaveType_@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)" class="flat-red" value="@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)" @disabledAttr>&nbsp;@(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveType)Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)))
                            </div>

                        }

                    </div>
                </div>
                <div id="toggelDiv" class="toglediv">
                    <div class="form-group" id="divHalfDay">
                        <div>
                            <label>Please Select:</label>
                        </div>

                        <input type="checkbox" checked data-toggle="toggle" id="toggleOne" data-on="Full Day" data-off="Half Day" data-width="100" data-onstyle="success" />
                    </div>
                    <div class="form-group" id="divDateRange" style="display:none;width: 517px;">
                        <div>
                            <label>Date range:</label>
                        </div>

                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar" id="leaveDatepickerIcon"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="leaveDatepicker">
                        </div>


                        <div class="form-group has-error" style="display:none" id="divDatePickerError">
                            <label class="control-label" for="inputError">
                                <i class="fa fa-times-circle-o"></i> Please select a valid date range.
                            </label>

                        </div>
                    </div>
                    <div class="form-group" id="divNoOfWorking" style="display:none">
                        <div>
                            <label>Number Of Working Days:</label>
                            <span id="lblTotalWorkingDays">0</span>
                        </div>
                    </div>
                    <div class="form-group" id="CompoDatePicker" style="display:none;width:517px;">
                        <label>Date:</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="datepicker" readonly="readonly">
                        </div>
                        <!-- /.input error -->
                        <div class="form-group has-error" style="display:none" id="divDateError">
                            <label class="control-label" for="datepicker">
                                <i class="fa fa-times-circle-o"></i> Please select Date
                            </label>

                        </div>
                    </div>
                    <div class="form-group" id="SickDatePicker" style="display:none;width:517px;">
                        <label>Date:</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="sickDate" readonly="readonly">
                        </div>
                        <!-- /.input group -->
                    </div>
                    <div class="form-group">
                        <div>
                            <label>Reason:</label>
                        </div>

                        <div>
                            <textarea id="leaveComment" rows="3" style="width:520px;resize:none" placeholder="Enter ..."></textarea>
                        </div>
                        <div class="form-group has-error" style="display:none" id="divCommentError">
                            <label class="control-label" for="leaveComment">
                                <i class="fa fa-times-circle-o"></i> Please enter the reason
                            </label>

                        </div>

                    </div>
                    <div id="toggle-advance" style="display:none">
                        <div class="form-group" id="divNoOfWorking">
                            <div>
                                <label style="color:red">Only <text id="txtAvailableCasualLeaves"></text> casual leave(s) left.Apply for available Casual leave(s),and go for Advance leave/LOP,if needed.</label>
                                @*// <div> <label>TotalWorking days Applied:</label> <span id="lblTotalWorkingDaysApplied">0</span></div>*@
                                @*<div id="TtCasual"> <label class="labelPaddingCasual">Total casual Leave :</label><label class="inputTextLeaves" id="TotalCasualLeave" style="padding-left:5px;"></label><label class="fromDatePadding">From:</label><label id="FromCasual" class="fromDatePadding"></label><label class="fromDatePadding">To</label><label id="toCasual" class="fromDatePadding"></label></div>*@
                                @*<div class="col-md-6">
                                        <label>
                                            <input type="checkbox" class="minimal" id="chkAdvancedLeave"> Advanced Leave
                                        </label>
                                    </div>
                                    <div class="col-md-6">
                                        <label>
                                            <input type="checkbox" class="minimal" id="chkLOP"> LOP
                                        </label>
                                    </div>*@
                                @*<div id="TtAdvnce" style="display:none" class="col-md-6"><div> <label class="labelPaddingSick">Total Advance Leave :</label><input id="totalAdvanceLeave" class="inputTextLeaves" style="padding-left:5px;" min="1" max="@totalAdvanceLeaveLeft" /></div> <div><label class="fromDatePadding">From:</label><label id="FromAdvance" class="fromDatePadding"></label><label class="fromDatePadding">To</label><label id="toAdvance" class="fromDatePadding"></label></div></div>
                                    <div id="TtLOP" style="display:none" class="col-md-6"> <div><label class="labelPaddingLOP">Total LOP:</label><input type="text" id="LOP" class="inputTextLeaves" style="padding-left:5px;" min="1" max="@totalLOPCap" /></div><div><label class="fromDatePadding">From:</label><label id="FromLop" class="fromDatePadding"></label><label class="fromDatePadding">To</label><label id="toLOP" class="fromDatePadding"></label></div></div>
                                    <label style="color:red">Do you want to continue?</label>*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" id="btnLeaveRequestSubmit" style="background-color:black !important" class="btn btn-primary">Submit</button>
                <button type="button" id="btnCasualAdvanceLeaveSubmit" style="background-color:#47a97e !important;display:none;" class="btn btn-primary">Yes</button>
                <button type="button" class="btn btn-default pull-right Close" data-dismiss="modal">Cancel</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- /.content -->
<!-- ./wrapper -->
<!-- DataTables -->
<script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
<script src="../../plugins/datatables/dataTables.bootstrap.min.js"></script>
<!-- page script -->
<script src="~/plugins/BootstrapToggle/bootstrap-toggle.min.js"></script>
<script src="~/plugins/daterangepicker/moment.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>*@
<script src="../../plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap datepicker -->
<script src="../../plugins/datepicker/bootstrap-datepicker.js"></script>
<script src="../../plugins/iCheck/icheck.min.js"></script>
<script src="../../plugins/Toastr/toastr.js"></script>
<script>
    var fromDate;
    var toDate;
    var IsFullDay =true;
    var workingDays;
    var totalcasualLeft = '@totalCasualLeaveLeft';
    var sickLeaveId = '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))';
    var totalAdvanceLeaveLeft = '@totalAdvanceLeaveLeft';
    var sickleavename = "r1_RdLeaveType_" + sickLeaveId;
    var isPossibleToApplyLeave = '@isSickApplied';
    var totalLOP= 0;
    var isPossibleToApplyCompo ='@totalCombboSubmitted';
    var isPossibleToApplyCasual='@totalCasualSubmitted';
    var totalCasualCountAppliedFor = 0;
    var totalAdvanceLeaveCountAppliedFor = 0;
    var  totalLopAppliedFor = 0 ;
    var totalLOPAdvanceCount = 0;
    var previousLOPCOUNT = 0;
    var previousAdvance =  0;
    var totalLOPSubmitted=@totalLOPSubmitted;
    var advanceLeaveEnum='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))';
    var lopEnum='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))';
    //set default
    if(totalcasualLeft!="")
    {
        if(totalcasualLeft<=0 || totalcasualLeft-isPossibleToApplyCasual<=0)
        {
            $("#RdLeaveType_" + advanceLeaveEnum).removeAttr('disabled');
            $("#RdLeaveType_" + advanceLeaveEnum).parent().removeClass('disabled','disabled');
            $("#RdLeaveType_" + lopEnum).parent().removeClass('disabled','disabled');
            $("#RdLeaveType_" + lopEnum).removeAttr('disabled');
        }
    }
    function formatDate(date) {
        var mm = date.getMonth() + 1;
        var dd = date.getDate();
        var yyyy = date.getFullYear();
        mm = (mm < 10) ? '0' + mm : mm;
        return mm + "-" + dd + "-" + yyyy;
    }
    var today = (formatDate(new Date()));
    if (isPossibleToApplyLeave == 0) {
        $('.modal-footer').hide();
    }
    $("#RdLeaveType_" + sickLeaveId).attr('checked', true);
    $('#SickDatePicker').show();
    $('#sickDate').val(today);

    //$('input[type=checkbox]').click(function (e) {
    //    debugger;
    //    if($('#chkAdvancedLeave').prop('checked'))
    //    {
    //        $("#TtAdvnce").show();
    //    }
    //    else  if($('#chkLOP').prop('checked'))
    //    {
    //        $("#TtLOP").show();
    //    }
    //});

    function CalculteCasualAdvnceCutOffLeavesCalc(workingdays)
    {
        var isCasulOnlyPossible =(totalcasualLeft >= workingdays) ?  true : false;
        var temCasualTodate ;
        var temAdvanceTodate;
        var temCompOff ;
        if(isCasulOnlyPossible)
        {
            $("#toggle-advance").hide();
            $("#btnLeaveRequestSubmit").show();
            $("#btnCasualAdvanceLeaveSubmit").hide();
        }
        else{

            if(totalcasualLeft != 0)
            {
                totalCasualCountAppliedFor = (totalcasualLeft);
                $("#TtCasual").show();
                $("#TotalCasualLeave").html(totalCasualCountAppliedFor);
                $("#txtAvailableCasualLeaves").html(totalCasualCountAppliedFor);
                //set from date   FromCasual
                $('#FromCasual').html(moment(fromDate).format('MM/DD/YYYY'));
                $('#toCasual').html(moment(addWeekdays(fromDate,totalCasualCountAppliedFor)).subtract(1, "days").format('MM/DD/YYYY'));
                temCasualTodate = moment(addWeekdays(fromDate,totalCasualCountAppliedFor)).format('MM/DD/YYYY');
                totalAdvanceLeaveCountAppliedFor = workingdays - totalcasualLeft;
                //if(totalAdvanceLeaveCountAppliedFor > totalAdvanceLeaveLeft)
                //{
                //    //calculating advance leave and LOP leave
                //    totalLOP= totalAdvanceLeaveCountAppliedFor - totalAdvanceLeaveLeft;
                //    totalLopAppliedFor = totalLOP;
                //    totalAdvanceLeaveCountAppliedFor = totalAdvanceLeaveLeft;
                //    temAdvanceTodate =  moment(addWeekdays(temCasualTodate,totalAdvanceLeaveCountAppliedFor)).format('MM/DD/YYYY');
                //    $("#TtAdvnce").show();
                //    $("#totalAdvanceLeave").val(totalAdvanceLeaveCountAppliedFor);
                //    $('#FromAdvance').html(moment(temCasualTodate).format('MM/DD/YYYY'));
                //    $('#toAdvance').html(moment(addWeekdays(temCasualTodate,totalAdvanceLeaveCountAppliedFor)).subtract(1, "days").format('MM/DD/YYYY'));
                //    $("#TtLOP").show();
                //    $("#LOP").val(totalLOP);
                //    $('#FromLop').html(moment(temAdvanceTodate).format('MM/DD/YYYY'));
                //    $('#toLOP').html(moment(addWeekdays(temAdvanceTodate,totalLopAppliedFor)).subtract(1, "days").format('MM/DD/YYYY'));
                //    totalLOPAdvanceCount = (parseInt(totalLopAppliedFor)+ parseInt(totalAdvanceLeaveCountAppliedFor));
                //    previousLOPCOUNT = $("#LOP").val();
                //    previousAdvance =  $("#totalAdvanceLeave").val();
                //}
                //else{
                //    totalLOP = 0;
                //    totalLopAppliedFor = 0;
                //    totalAdvanceLeaveCountAppliedFor =totalAdvanceLeaveCountAppliedFor;
                //    $("#TtAdvnce").show();
                //    $("#totalAdvanceLeave").val(totalAdvanceLeaveCountAppliedFor);
                //    $('#FromAdvance').html(moment(temCasualTodate).format('MM/DD/YYYY'));
                //    $('#toAdvance').html(moment(addWeekdays(temCasualTodate,totalAdvanceLeaveCountAppliedFor)).subtract(1, "days").format('MM/DD/YYYY'));
                //    //$("#TtLOP").hide();
                //    $("#LOP").val(totalLOP);
                //    previousLOPCOUNT = 0;
                //    previousAdvance =  $("#totalAdvanceLeave").val();
                //}
            }
            $("#btnLeaveRequestSubmit").hide();
            $("#btnCasualAdvanceLeaveSubmit").show();
            $("#toggle-advance").slideToggle("slow");
        }
    }


    $("#LOP").change(function() {
        OnchangeCountCalculation( $("#LOP").val(),false);
        previousLOPCOUNT = $("#LOP").val();
        previousAdvance =  $("#totalAdvanceLeave").val();
    });



    $("#totalAdvanceLeave").change(function() {
        OnchangeCountCalculation($("#totalAdvanceLeave").val(),true);
        previousLOPCOUNT = $("#LOP").val();
        previousAdvance =  $("#totalAdvanceLeave").val();
    });
    $("#LOP").keypress(function(event){
        return (event.charCode >= 48 && event.charCode <= 57)
    });
    $("#totalAdvanceLeave").keypress(function(event){
        return event.charCode >= 48 && event.charCode <= 57;
    });

    function OnchangeCountCalculation(newValue,IsAdvance)
    {

        var fromAdvanceLeaveDate ="";
        var toLOPDate ="";
        var AdvanceCount=0;
        var LOPCount=0;
        AdvanceCount = newValue;
        LOPCount =((totalLOPAdvanceCount - AdvanceCount) < 0)? 0 : (totalLOPAdvanceCount - AdvanceCount) ;
        if(IsAdvance)
        {
            if(newValue == 0){
                $("#TtAdvnce").hide();
            }
            else
            {
                $("#TtAdvnce").show();
            }

            if(LOPCount == 0){
                $("#TtLOP").hide();
            }
            else
            {
                $("#TtLOP").show();
            }

            if(CheckCap(AdvanceCount,LOPCount)){
                $("#LOP").val("");
                $('#FromAdvance').html("");
                $('#toAdvance').html("");
                $('#FromLop').html("");
                $('#toLOP').html("");
                $("#LOP").val(LOPCount);
                var casualTodate =  $('#toCasual').html();
                var  temAdvanceTodate =  moment(addWeekdays(casualTodate,AdvanceCount)).format('MM/DD/YYYY');
                $('#FromAdvance').html(moment(casualTodate).add(1, "days").format('MM/DD/YYYY'));
                $('#toAdvance').html(moment(temAdvanceTodate).format('MM/DD/YYYY'));
                $('#FromLop').html(moment(temAdvanceTodate).add(1, "days").format('MM/DD/YYYY'));
                $('#toLOP').html(moment(addWeekdays(temAdvanceTodate,LOPCount)).subtract(1, "days").format('MM/DD/YYYY'));
                totalAdvanceLeaveCountAppliedFor = AdvanceCount;
                totalLopAppliedFor = LOPCount ;
            }
            else
            {
                $("#LOP").val(previousLOPCOUNT);
                $("#totalAdvanceLeave").val(previousAdvance);
                $("#TtAdvnce").show();
                $("#TtLOP").show();
            }
        }
        else
        {
            LOPCount =  newValue;
            AdvanceCount = ((totalLOPAdvanceCount - LOPCount) < 0) ? 0 : (totalLOPAdvanceCount - LOPCount) ;
            if(newValue == 0){
                $("#TtLOP").hide();
            }
            else
            {
                $("#TtLOP").show();
            }

            if(AdvanceCount == 0){
                $("#TtAdvnce").hide();
            }
            else
            {
                $("#TtAdvnce").show();
            }
            if(CheckCap(AdvanceCount,LOPCount)){
                $("#totalAdvanceLeave").val("");
                $('#FromAdvance').html("");
                $('#toAdvance').html("");
                $('#FromLop').html("");
                $('#toLOP').html("");
                $("#totalAdvanceLeave").val(AdvanceCount);
                var casualTodate =  $('#toCasual').html();
                var  temAdvanceTodate =  moment(addWeekdays(casualTodate,AdvanceCount)).format('MM/DD/YYYY');
                $('#FromAdvance').html(moment(casualTodate).add(1, "days").format('MM/DD/YYYY'));
                $('#toAdvance').html(moment(temAdvanceTodate).format('MM/DD/YYYY'));
                $('#FromLop').html(moment(temAdvanceTodate).add(1, "days").format('MM/DD/YYYY'));
                $('#toLOP').html(moment(addWeekdays(temAdvanceTodate,LOPCount)).subtract(1, "days").format('MM/DD/YYYY'));
                totalAdvanceLeaveCountAppliedFor = AdvanceCount;
                totalLopAppliedFor = LOPCount ;
            }
            else
            {
                $("#LOP").val(previousLOPCOUNT);
                $("#totalAdvanceLeave").val(previousAdvance);
                $("#TtAdvnce").show();
                $("#TtLOP").show();
            }
        }
    }

    function CheckCap(AdvanceCount,LOPCount)
    {
        if((parseInt(AdvanceCount) > '@totalAdvanceLeaveLeft') && (parseInt(LOPCount) >'@totalLOPLeft'))
        {
            showMessage("Sorry!! Your max limit for advance leave is  " + '@totalAdvanceLeaveLeft' + "and max limit for LOP is "+'@totalLOPLeft', "2", true);
            return false;
        }
        else if(parseInt(AdvanceCount) > '@totalAdvanceLeaveLeft'){

            showMessage("Sorry!! Your max limit for advance leave is  " + '@totalAdvanceLeaveLeft', "2", true);
            return false;
        }
        else if(parseInt(LOPCount) > '@totalLOPLeft'){

            showMessage("Sorry!! Your max limit for LOP is  " + '@totalLOPLeft', "2", true);
            return false;
        }
        else
        {
            return true;
        }
    }

    function addWeekdays(date, days) {
        date = moment(date); // use a clone
        while (days > 0) {
            date = date.add(1, 'days');
            // decrease "days" only if it's a weekday.
            if (date.isoWeekday() !== 6 && date.isoWeekday() !== 7) {
                days -= 1;
            }
        }
        return date;
    }


    var totalCompOffDate = @Html.Raw(Json.Encode(ComboDateList));
    var loop=[];
    for(i = 0;i<totalCompOffDate.length;i++)
    {
        loop.push(new Date(parseInt( totalCompOffDate[i].substr(6, 13))).getTime());
    }

    $(document).on('click', '#btnaddleave', function (e) {
        //if (isPossibleToApplyLeave == 0) {
        //    $('.modal-footer').hide();
        //}
        $("#toggle-advance").hide();
        totalCasualCountAppliedFor = 0;
        totalAdvanceLeaveCountAppliedFor = 0;
        totalLopAppliedFor = 0 ;
        $("#btnLeaveRequestSubmit").show();
        $("#btnCasualAdvanceLeaveSubmit").hide();
        $("#RdLeaveType_" + sickLeaveId).attr('checked', true);
        $('#sickDate').val(today);
        $('#divDateRange').hide();
        $('#divNoOfWorking').hide();
        $('#leaveComment').val("");
        $('#CompoDatePicker').hide();
        $('.modal-footer').show();
        $('#divDateError').hide();
        $('#toggleOne').bootstrapToggle('on');
        $('#divCommentError').hide();
        if (isPossibleToApplyLeave == 0) {
            $('.modal-footer').hide();
        }
        $("#divLeaveTypeError").hide();
        $('#SickDatePicker').show();
        $('#divHalfDay').show();
    });

    $(document).ready(function () {
        if (localStorage.getItem("leaveDeleted") == 1) {
            showSuccessMessage("Leave request deleted");
            localStorage.removeItem("leaveDeleted");
        }

        $('.toggle-on').css("background-color", "#47a97e");
        $(document).on('click','#leaveDatepickerIcon',function(){
            $("#leaveDatePicker").data('daterangepicker').toggle();
        });
        $(function () {
            $('#example1').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": false,
                "ordering": false,
                "info": true,
                "autoWidth": false,
            });
            $("#example1.dataTables_filter").hide();
            $('#leaveDatepicker ').daterangepicker(
                {
                    minDate: new Date()
                });
            $('#leaveDatepicker').on('change.daterangepicker', function (ev, picker) {
                var date = ev.target.value;
                var dates = [];
                dates = date.split('-');
                var start = dates[0].trim();
                var startDate = new Date(start);
                var startMonth = startDate.getMonth() + 1;
                fromDate = startDate.getFullYear() + "-" + startMonth + "-" + startDate.getDate();
                var end = dates[1].trim();
                var endDate = new Date(end);
                var endMonth = endDate.getMonth() + 1;
                toDate = endDate.getFullYear() + "-" + endMonth + "-" + endDate.getDate();
                //toDate = end.toString("YYYY-MM-DD");
                //var days = (endDate - startDate) / (1000 * 60 * 60 * 24);
                //days += 1;
                //var weekend_count = 0;
                //for (i = startDate.valueOf() ; i <= endDate.valueOf() ; i += 86400000) {
                //    var temp = new Date(i);
                //    if (temp.getDay() == 0 || temp.getDay() == 6) {
                //        weekend_count++;
                //    }
                //}
                //days = days - weekend_count;
                //$("#lblTotalWorkingDays").html(Math.round(days));
                $("#toggle-advance").hide();
            });
            $('#leaveDatepicker ').on('apply.daterangepicker', function (ev, picker) {
            
                var start = picker.startDate;
                fromDate = start.format('YYYY-MM-DD');
                var end = picker.endDate;
                toDate = end.format('YYYY-MM-DD');
                var leaveType = $('input[name=r1]:checked').val();
                $.ajax({
                    cache: false,
                    type: 'post',
                    url: '/ApplyLeave/CheckLeaveAvailability',
                    data:{fromDate:fromDate,toDate:toDate,leaveType:leaveType},
                    dataType: "json",
                    success: function (data) {
                      
                      
                            switch(data.result.responseCode)
                            {
                                case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.NoLeaveBalance):
                                    if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))') {
                                        
                                            showMessage("Only "+data.result.availableLeaveBalance+" Casual Leave(s) are available,Go for Advance Leave/LOP","2",true);
                                        }
                                    else if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))')
                                        {
                                            showMessage("Only "+data.result.lopLeaveBalance+" LOP(s) are available","2",true);
                                        }
                                    else if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))')
                                        {
                                            showMessage("Only "+data.result.advanceLeaveBalance+" Advance Leaves(s) are available","2",true);
                                    }
                                    $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                    $('.modal-footer').hide();
                                    return false;
                                    break;
                                case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.DateAlreadyExists):
                                    showMessage("You have already applied for leave within this date range","2",true);
                                    $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                    $('.modal-footer').hide();
                                    return false;
                                    break;
                                case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.OK):
                                    debugger
                                    $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                    $('.modal-footer').show();
                                    return false;
                                    break;
                            }
               
                        
                    }
            });
            @*var clickedradioButton = $('input[name=r1]:checked').val();
            if ($("#lblTotalWorkingDays").html() == "1" && clickedradioButton == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))') {
                $('#divHalfDay').show();
            }
            else {
                $('#divHalfDay').hide();

            }

          //  CalculteCasualAdvnceCutOffLeavesCalc(Math.round(days));
          //  $("#lblTotalWorkingDays").html(Math.round(days));
            @*if(clickedradioButton=='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))')
            {
                CheckCap(Math.round(days),0);
            }
            if(clickedradioButton=='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))')
            {
                CheckCap(0,Math.round(days));
            }*@
            //calculate how much casual leaves are left?how many taken as advace and lop div should show.

        });
    });
    $('#AddLeaveModal').on('hidden.bs.modal', function () {
        $(this).find("textarea#leaveComment").val('').end();
        //$("#leaveDatepicker").daterangepicker("destroy");
        //$("#leaveDatepicker").daterangepicker("refresh");
        $('#divHalfDay').show();
        $("#divCommentError").hide();
        $('#SickDatePicker').show();
        $('#sickDate').val(today);
        $("#divLeaveTypeError").hide();
        $(this).find("input.flat-red:checked").parent().removeClass('checked');
        $("#RdLeaveType_" + sickLeaveId).parent().addClass('checked');

        //  $('#RdLeaveType_" + sickLeaveId'+" 'input'").iCheck('check');
    });
    });
    $(function () {
        $('#toggleOne').bootstrapToggle({
            on: 'Full Day',
            off: 'Half Day'
        });
    })

    $(function () {
        $('#toggleOne').change(function () {
            var clickedradioButton = $('input[name=r1]:checked').val();
            if ($(this).prop('checked')) {
                IsFullDay = true;
                @*switch (clickedradioButton) {
                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                        $("#lblTotalWorkingDays").html("1");
                        break;
                    default:
                        break;
                }*@
            }
            else {
                IsFullDay = false;

                switch (clickedradioButton) {
                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                        $("#lblTotalWorkingDays").html("0.5");
                        break;
                    default:
                        break;
                }

            }
        })
    })
    $(document).on('click', '#btnClose,.close,.Close', function (e) {
        $("#RdLeaveType_" + sickLeaveId).attr('checked', true);
        $('#sickDate').val(today);
        $('#divDateRange').hide();
        $('#divNoOfWorking').hide();
        $('#leaveComment').val("");
        $('#CompoDatePicker').hide();
        $('.modal-footer').show();
        $('#divDateError').hide();
        $('#toggleOne').bootstrapToggle('on');
        $('#divCommentError').hide();
        if (isPossibleToApplyLeave == 0) {
            $('.modal-footer').hide();
        }
        $("#divLeaveTypeError").hide();
        $('#SickDatePicker').show();
        $('#divHalfDay').show();
    });




    $('input').on('ifChecked', function (event) {
        //  alert(event.type + ' callback');
        debugger;
        var clickedradioButton = $('input[name=r1]:checked').val();
        switch (clickedradioButton) {
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':
                console.log("SickLeave");
                // $("#toggelDiv").hide();
                $("#toggle-advance").hide();
                $('#divDateRange').hide();
                $('#divNoOfWorking').hide();
                //clear values
                totalCasualCountAppliedFor = 0;
                totalAdvanceLeaveCountAppliedFor = 0;
                totalLopAppliedFor = 0 ;
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveComment').val("");
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divDateError').hide();
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                if (isPossibleToApplyLeave == 0) {
                    $('.modal-footer').hide();
                    showMessage("Sorry!!You already applied for Sick Leave today", "2", true);
                }
                $("#divLeaveTypeError").hide();
                $('#SickDatePicker').show();
                // $("#toggelDiv").slideToggle("slow");
                $('#divHalfDay').show();
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                //  $("#toggelDiv").hide();
                $('#divDateRange').show();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                //clear values
                totalCasualCountAppliedFor = 0;
                totalAdvanceLeaveCountAppliedFor = 0;
                totalLopAppliedFor = 0 ;
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                if(totalcasualLeft<=0)
                {
                    $('.modal-footer').hide();
                    showMessage("No Casual Leaves available", "2", true);

                }
                else if (isPossibleToApplyCasual > 0) {
                    $('.modal-footer').hide();
                    showMessage("Sorry!!  You cannot Apply for Casual/Advance leave since your manager approves the submitted one", "2", true);
                }

                // $("#toggelDiv").slideToggle("slow");
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':
                //  $("#toggelDiv").hide();
                $('#divDateRange').show();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                //clear values
                totalCasualCountAppliedFor = 0;
                totalAdvanceLeaveCountAppliedFor = 0;
                totalLopAppliedFor = 0 ;
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                if (isPossibleToApplyCasual > 0) {
                    $('.modal-footer').hide();
                    showMessage("Sorry!!  You cannot Apply for Casual/Advance leave since your manager approves the submitted one", "2", true);
                }
                // $("#toggelDiv").slideToggle("slow");

                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                //  $("#toggelDiv").hide();
                $('#divDateRange').hide();
                $('#divNoOfWorking').hide();
                $('#CompoDatePicker').show();
                $("#toggle-advance").hide();
                $("#datepicker").val("");
                $('#divCommentError').hide();
                $('.modal-footer').show();

                //clear values
                totalCasualCountAppliedFor = 0;
                totalAdvanceLeaveCountAppliedFor = 0;
                totalLopAppliedFor = 0 ;
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveComment').val("");
                $('#divDateError').hide();
                $("#divLeaveTypeError").hide();
                $('#SickDatePicker').hide();
                $('#divHalfDay').hide();
                // $("#toggelDiv").slideToggle("slow");
                if (isPossibleToApplyCompo > 0) {
                    $('.modal-footer').hide();
                    showMessage("Sorry!!  You cannot Apply for Comp Off leave since your manager approves the submitted one", "2", true);
                }
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))':
                //$("#toggelDiv").hide();
                $('#divDateRange').show();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                //clear values
                totalCasualCountAppliedFor = 0;
                totalAdvanceLeaveCountAppliedFor = 0;
                totalLopAppliedFor = 0 ;
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                // $("#toggelDiv").slideToggle("slow");
                if (totalLOPSubmitted > 0) {
                    $('.modal-footer').hide();
                    showMessage("Sorry!!  You cannot Apply for LOP leave since your manager approves the submitted one", "2", true);
                }
                break;
            default:
                break;

        }
        console.log("sick leave clicked;");
    });

    $("#leaveComment").keypress(function (e) {
        $('#divCommentError').hide();
    });
    $('input[name=r1]').parent().click(function (e) {
        $("#divLeaveTypeError").hide();
    });

    //Form validation

    function FormValidate() {
        var clickedradioButton = $('input[name=r1]:checked').val();
        switch (clickedradioButton) {
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':
                //check comments
                if ($("#leaveComment").val() != "") {
                    //set from date to date IsFullDay,noof working days
                    fromDate = $("#sickDate").val();
                    toDate = fromDate;
                    workingDays = 1;
                    return true;
                }
                else {
                    $('#divCommentError').show();
                    return false;
                }

                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                //check date
                if ($("#leaveComment").val() != "" && $("#datepicker").val() != "") {
                    fromDate = $("#datepicker").val();
                    toDate = fromDate;
                    workingDays = 1;
                    return true;
                }
                else if ($("#leaveComment").val() == "" && $("#datepicker").val() == "") {
                    $('#divCommentError').show();
                    $('#divDateError').show();
                    return false;
                }
                else {
                    if ($("#leaveComment").val() == "") {
                        $('#divCommentError').show();
                        return false;
                    }
                    else if ($("#datepicker").val() == "") {
                        $('#divDateError').show();
                        return false;
                    }
                }
                //check comment
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':

                //check date range
                //check comment
                if($("#lblTotalWorkingDays").html()>parseInt(@totalAdvanceLeaveLeft))
                {
                    showMessage("Sorry!! Your max limit for advance leave is  " + '@totalAdvanceLeaveLeft', "2", true);
                    return false;
                }
                else  if ($("#leaveComment").val() != "" && $("#leaveDatepicker").val() != "") {
                    //set values
                    fromDate = fromDate;
                    toDate = toDate;
                    workingDays = $("#lblTotalWorkingDays").html();
                    return true;
                }
                else if ($("#leaveComment").val() == "" && $("#leaveDatepicker").val() == "") {
                    $('#divCommentError').show();
                    $('#divDatePickerError').show();
                    return false;
                }
                else {
                    if ($("#leaveComment").val() == "") {
                        $('#divCommentError').show();
                        return false;
                    }
                    else if ($("#leaveDatepicker").val() == "") {
                        $('#divDatePickerError').show();
                        return false;
                    }
                }
                break;
            case '@Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.LOP)':
                if ($("#leaveComment").val() != "") {
                    //set from date to date IsFullDay,noof working days
                    fromDate = $("#sickDate").val();
                    toDate = fromDate;
                    workingDays = 1;
                    return true;
                }
                else {
                    $('#divCommentError').show();
                    return false;
                }
                if($("#lblTotalWorkingDays").html() > parseInt(@totalLOPCap)){
                    showMessage("Sorry!! Your max limit for LOP is  " + '@totalLOPCap', "2", true);
                    return false;

                }
                else
                {
                    workingDays = $("#lblTotalWorkingDays").html();
                    return true;
                }
            default:
                return true;
                break;
        }
    }
    //submitting Leavecasual/Advance both together

    $(document).on('click', '#btnCasualAdvanceLeaveSubmit', function (e) {

        if (FormValidate()) {
            var comments = $("#leaveComment").val();
            $('#AddLeaveModal').modal('hide');
            //$('body').loading({
            //    stoppable: true,
            //    message: 'Working...',
            //    //overlay: $("#ajaxloader")
            //});



            $.ajax({
                cache: false,
                type: 'post',
                url: '/ApplyLeave/SubmitLeaveRequestForCasualORAdvance',
                data: { CasualleaveCount: totalCasualCountAppliedFor, AdvanceLeaveCount: totalAdvanceLeaveCountAppliedFor, LOP: totalLopAppliedFor, fromDate: fromDate, toDate: toDate, comments:comments},
                dataType: "json",
                success: function (data) {

                    $.ajax({
                        cache: false,
                        type: 'get',
                        url: '/ApplyLeave/GetEmployeeLeaveList',
                        dataType: "json",
                        success: function (data) {
                            isPossibleToApplyCasual = isPossibleToApplyCasual + 2;
                            $('#AddLeaveModal').modal('hide');
                            updateLeaveTable(data.result);
                            //$('body').loading('stop');
                            //$('#leaveDatepicker').daterangepicker(
                            //   {
                            //       minDate: new Date()
                            //   });
                            $('#datepicker').val("");
                            $('#SelectReason').val("");
                        }
                    });
                }
            });
        }
    });
    // submitting leave request

    $(document).on('click', '#btnLeaveRequestSubmit', function (e) {
        if (FormValidate()) {
            var comments = $("#leaveComment").val();
            $('#AddLeaveModal').modal('hide');
            var leaveType = $('input[name=r1]:checked').val();
            $.ajax({
                cache: false,
                type: 'post',
                url: '/ApplyLeave/SubmitLeaveRequest',
                data: { leaveType: leaveType, fromDate: fromDate, toDate: toDate, comments: comments, workingDays: workingDays, isFullDay: IsFullDay },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $.ajax({
                        cache: false,
                        type: 'get',
                        url: '/ApplyLeave/GetEmployeeLeaveList',
                        dataType: "json",
                        success: function (data) {
                            $('#AddLeaveModal').modal('hide');
                            updateLeaveTable(data.result);
                            switch (leaveType) {
                                case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':

                                    //  if (IsFullDay == true) {
                                    isPossibleToApplyLeave = 0;
                                    //  }
                                    break;
                                    showMessage("Leave request added successfully", "1", true);
                                case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                                    loop.push(new Date($('#datepicker').val()).getTime());
                                    isPossibleToApplyCompo = isPossibleToApplyCompo + 1 ;
                                    showMessage("Leave request added successfully", "1", true);
                                    break;
                                case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                                case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':
                                   
                                    isPossibleToApplyCasual = isPossibleToApplyCasual + 1;
                                    if(leaveType==@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave)) && (totalcasualLeft <=0 || totalcasualLeft-workingDays<=0))
                                    {
                                        $("#RdLeaveType_" + advanceLeaveEnum).removeAttr('disabled');
                                        $("#RdLeaveType_" + advanceLeaveEnum).parent().removeClass('disabled','disabled');
                                        $("#RdLeaveType_" + lopEnum).parent().removeClass('disabled','disabled');
                                        $("#RdLeaveType_" + lopEnum).removeAttr('disabled');
                                    }
                                    showMessage("Leave request added successfully", "1", true);
                                    //$('#leaveDatepicker').daterangepicker(
                                    //{
                                    //    minDate: new Date()
                                    //});
                                    break;
                                case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))':
                                   
                                    totalLOPSubmitted = totalLOPSubmitted + 1;
                         
                                    showMessage("LOP request added successfully", "1", true);
                                    break;
                                default:
                                    showMessage("Leave request successfully submitted for approval", "1", true);
                                    break;
                            }


                            //$('body').loading('stop');


                            $('#datepicker').val("");
                            $('#SelectReason').val("");
                        }
                    });
                }
            });
        }
    }
    );
    $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
        checkboxClass: 'icheckbox_flat-green',
        radioClass: 'iradio_flat-green'
    });

    $('#datepicker').datepicker({
        autoclose: true,
        setDate: today
    })
    .on('changeDate', function (ev) {
        $('#divDateError').hide();
        var date = ev.date;
        console.log(ev.date);
        var newDate = new Date(date).getTime();
        console.log(newDate);
        if ($.inArray(newDate, loop) > -1)
        {
            showMessage("The selected date is already existing.Please select new date!!", "2", true);
            $('#datepicker').datepicker('hide');
            $('#datepicker').val("");
        }
    });





    // $('#datepicker').datepicker('setDate', today);

    $(document).on('click', '#btnApplyLeave', function (e) {
        var id = $(this).data("content");
        $.ajax({
            cache: false,
            type: 'post',
            url: '/ApplyLeave/SubmitLeaveForApproval',
            data: { id: id },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                localStorage.setItem("leaveSubmitted", 1);
                location.reload();
            }
        });
    }
    );


    $(document).on('click', '#btnDeleteLeave', function (e) {
        var id = $(this).data("content");
        var deletedDate =($(this).parent().parent().find("td:nth-child(1)")[0].innerText);
        var leaveTypes=($(this).parent().parent().find("td:nth-child(6)")[0].innerText);
        $.ajax({
            cache: false,
            type: 'post',
            url: '/ApplyLeave/DeleteLeaveRequest',
            data: { leaveId: id },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                switch (leaveTypes) {

                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.CompoOff))':
                        loop.pop(new Date(deletedDate).getTime());
                        isPossibleToApplyCompo = isPossibleToApplyCompo - 1 ;
                        break;
                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                        isPossibleToApplyCasual = isPossibleToApplyCasual - 1;
                        break;
                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':
                        isPossibleToApplyCasual = isPossibleToApplyCasual - 1;
                        break;
                    default:

                        break;
                }
                updateLeaveTable(data.result);
                showMessage("Leave request successfully deleted","1",true);
            }
        });
    }
   );


    //Show error Message
    function showMessage(message, Type, fadeOut) {
        //To clear existing toastr
        toastr.clear();
        //fadeOut = false;
        var position = "bottom-full-width";
        toastr.options.positionClass = 'toast-' + position;
        if (typeof fadeOut !== "undefined" && fadeOut == false) { toastr.options.timeOut = 0; }
        else {
            toastr.options.timeOut = 5000;
        }
        switch (Type) {
            case "1":
                toastr.success(message);
                break;
            case "2":
                toastr.error(message);
                break;
        }
    }

    //function showSuccessMessage(message, fadeOut) {
    //    //To clear existing toastr
    //    toastr.clear();
    //    //fadeOut = false;
    //    var position = "bottom-full-width";
    //    toastr.options.positionClass = 'toast-' + position;
    //    if (typeof fadeOut !== "undefined" && fadeOut == false) { toastr.options.timeOut = 0; }
    //    toastr.success(message);
    //}

    function convertToJsonDate(jsonDate) {
        //var dateFormat = dateTimeFormat;
        if (jsonDate != undefined && jsonDate != null) {
            var regex = /-?\d+/;
            var matches = regex.exec(jsonDate);
            var date = new Date(parseInt(matches[0]));
            var d = new Date(date);
            if (d.getFullYear() < 2000) {
                return "";
            }
            if (!isNaN(d.getDate()) && !isNaN(d.getMonth()) && !isNaN(d.getFullYear())) {
                formattedDate = d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear();
                return formattedDate;
            }
            else {
                return "";
            }
        }
        else {
            return "";
        }
    }

    function updateLeaveTable(data) {
        $("#tblAppliedLeave").html("");
        var refStatus=0;
        var html = "<table id='example1' class='table table-bordered table-striped'><thead>" +
                "<tr><th>From Date</th><th>To Date</th><th>Submitted Date</th><th>Status</th>" +
                    "<th style=width:160px'>Number of working Days</th><th>Leave Type</th><th>Delete</th></tr></thead><tbody>";
        for (var i = 0; i < data.length; i++) {
            html += "<tr><td>" + data[i].FormattedDate + "</td><td>" + data[i].FormattedToDate + "</td>" +
               "<td>" + data[i].FormattedCreated + "</td>" +
                       "<td>" + data[i].StatusName + "</td><td>";
            html += data[i].NumberOfWorkingDays + "</td>" +
           "<td>" + data[i].LeaveTypeName + "</td>";
            if (data[i].RefStatus != '@Convert.ToInt16(LMS_WebAPP_Utils.LeaveStatus.Approved)') {
                html += "<td><a href='#' id='btnDeleteLeave' style='color:red' data-content='" + data[i].Id + "'><span class='fa fa-close'></span></a> </td> ";
            }
            else {
                html += "<td></td>";
            }
            html += " </tr>";
        }
        html += "</tbody></table>";
        $("#tblAppliedLeave").html(html);
        $('#example1').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
        });
    }
</script>
