@model List<LMS_WebAPP_Domain.LeaveTransaction>
@{
    ViewBag.Title = "LeaveTransaction";
    var data = (LMS_WebAPP_Domain.UserAccount)Session[LMS_WebAPP_Utils.Constants.SESSION_OBJ_USER];
    var totalCasualLeaveLeft = data.TotalCasualLeave;
    var compoLeavetype = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff));
    var refLeaveTypeCasual = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave));
    var advanceLeaveType = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave));
    var leaveStatusSubmitted = @Convert.ToInt16((LMS_WebAPP_Utils.LeaveStatus.Submitted));
    var totalCasualSubmitted = (from n in Model where (n.RefLeaveType == refLeaveTypeCasual || n.RefLeaveType == advanceLeaveType) && n.RefStatus == leaveStatusSubmitted select n).ToList().Count();
    var totalCompOffSubmitted = (from n in Model where n.RefLeaveType == compoLeavetype && n.RefStatus == leaveStatusSubmitted select n).ToList().Count();
    var totalLOPSubmitted = Model.Where(i => i.RefLeaveType == (int)LMS_WebAPP_Utils.LeaveType.LOP && i.RefStatus == (int)LMS_WebAPP_Utils.LeaveStatus.Submitted).ToList().Count();
    var totalLOPCap = data.TotalLOPLImit;
    var totalAdvanceLeaveLeft = data.TotalAdvanceLeaveTotake;
    var CompOffDateList = (from n in Model where n.RefLeaveType == compoLeavetype select n.FromDate).ToList();
    DateTime empDateOfJoining = data.DateOfJoining;
    var messageType_Success = @Convert.ToInt16((LMS_WebAPP_Utils.MessageType.Success));
    var messageType_Error = @Convert.ToInt16((LMS_WebAPP_Utils.MessageType.Error));
    var dateFormatDatePicker = LMS_WebAPP_Utils.Constants.DATE_FORMAT_DATEPICKER;
    var dateFormatDateRangePicker = LMS_WebAPP_Utils.Constants.DATE_FORMAT_DATERANGEPICKER;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using EmployeeLeaveManagementApp.Content.Resources

<style>
    .toglediv {
        background-color: white;
        padding: 25px;
    }

    .labelPaddingCasual {
        padding-right: 17px;
    }

    .labelPaddingSick {
        padding-right: 4px;
    }

    .labelPaddingLOP {
        padding-right: 73px;
    }

    .inputTextLeaves {
        width: 50px;
    }

    .fromDatePadding {
        padding-left: 32px;
    }
</style>
<!-- Font Awesome -->
<link rel="stylesheet" href="../../plugins/datatables/dataTables.bootstrap.css">
<!-- iCheck for checkboxes and radio inputs -->
<link href="~/plugins/loader/jquery.loading.min.css" rel="stylesheet" />
<link rel="stylesheet" href="../../plugins/iCheck/all.css">
<link href="~/plugins/Toastr/toastr.css" rel="stylesheet" />
<link href="~/plugins/BootstrapToggle/bootstrap-toggle.min.css" rel="stylesheet" />
<link href="~/Content/Style.css" rel="stylesheet" />
<section class="content-header" style="height:41px">
    <h1 class="col-md-9" style="padding-left:0px">
        Leave Details
    </h1>
    <div style="float:right;padding-right:0px" class="col-md-2">
        <button type="button" id="btnaddleave" class="btn btn-block bg-black" data-toggle="modal" data-target=".bs-add-leave-modal" style="background-color:#222d32 !important"><i class="fa fa-plus"></i>&nbsp; Add Leave </button>
    </div>
</section>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box box-success">
                <div class="box-body" id="tblAppliedLeave">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>From Date</th>
                                <th>To Date</th>
                                <th>Submitted Date</th>
                                <th>Status</th>
                                <th style="width:160px">Number of Working Days</th>
                                <th>Leave Type</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (LMS_WebAPP_Domain.LeaveTransaction m in Model)
                            {
                                var btnDisabled = m.RefStatus > 9 ? "disabled" : "";
                                if (m.RefLeaveType != (int)LMS_WebAPP_Utils.LeaveType.RewardLeave && m.RefLeaveType != (int)LMS_WebAPP_Utils.LeaveType.EarnedLeave)
                                {

                                    var toDate = "";
                                    if (m.ToDate.HasValue)
                                    {
                                        toDate = m.ToDate.Value.Date.ToString("dd/MM/yyyy");
                                    }

                                    <tr>
                                        <td>@m.FromDate.Date.ToString("dd/MM/yyyy")</td>
                                        <td>@toDate</td>
                                        <td>@m.CreatedDate.Date.ToString("dd/MM/yyyy")</td>
                                        <td>@(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveStatus)m.RefStatus))</td>
                                        <td>@m.NumberOfWorkingDays</td>
                                        <td>@(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveType)m.RefLeaveType))</td>
                                        @if (m.RefStatus != Convert.ToInt16(LMS_WebAPP_Utils.LeaveStatus.Approved))
                                        {
                                            <td>
                                                <a href="#" id="btnDeleteLeave" style="color:red" data-content="@m.Id">
                                                    <span class="fa fa-close"></span>
                                                </a>
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                    </tr>

                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<div class="modal bs-add-leave-modal" id="AddLeaveModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content border-radius-modalBottom" style="width: 681px;">
            <div class="modal-header modalHeaderStyle">
                <button type="button" class="close text-color-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h3 class="modal-title">Apply Leave</h3>
            </div>
            <div class="modal-body">
                <div class="form-group" style="padding-bottom:20px">
                    <div style="padding-left:20px">
                        <label>Leave Type <span style="color:red">*</span></label>
                    </div>
                    <span class="form-group has-error" style="display:none" id="divLeaveTypeError">
                        <label class="control-label" for="inputError">
                            <i class="fa fa-times-circle-o"></i> Please select leave type:
                        </label>
                    </span>
                    <div id="rddiv">
                        @foreach (var value in Enum.GetValues(typeof(LMS_WebAPP_Utils.LeaveType)))
                        {
                            if (@Convert.ToInt16(value) != (Int16)LMS_WebAPP_Utils.LeaveType.CancelledLeave)
                            {
                                if (@Convert.ToInt16(value) != (Int16)LMS_WebAPP_Utils.LeaveType.RewardLeave && @Convert.ToInt16(value) != (Int16)LMS_WebAPP_Utils.LeaveType.EarnedLeave)
                                {

                                    var disabledAttr = "";
                                    if (Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.AdvanceLeave) == @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value) ||
                                        Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.LOP) == @Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value))
                                    {
                                        disabledAttr = "disabled";
                                    }
                                <div class="col-md-4" style="margin-top:10px">
                                    <input type="radio" name="r1" id="RdLeaveType_@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)" class="flat-red" value="@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)" @disabledAttr> @(LMS_WebAPP_Utils.CommonMethods.Description((LMS_WebAPP_Utils.LeaveType)Convert.ToInt16((LMS_WebAPP_Utils.LeaveType)value)))
                                </div>

                                }
                            }
                        }
                    </div>
                </div>
                <div id="toggelDiv" class="toglediv" style="padding-bottom:0px;padding-top:48px">
                    <div class="form-group" id="divHalfDay">
                        <div>
                            <label>Please Select:</label>
                        </div>
                        <input type="checkbox" checked data-toggle="toggle" id="toggleOne" data-on="Full Day" data-off="Half Day" data-width="100" data-onstyle="success" />
                    </div>
                    <div class="form-group" id="divDateRange" style="display:none;width: 517px;">
                        <div>
                            <label>Date range <span style="color:red">*</span> :</label>
                        </div>
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar" id="leaveDatepickerIcon"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="leaveDatepicker">
                        </div>

                        <div class="form-group has-error" style="display:none" id="divDatePickerError">
                            <label class="control-label" for="inputError">
                                <i class="fa fa-times-circle-o"></i> Please select a valid date range.
                            </label>
                        </div>
                    </div>
                    <div class="form-group" id="divLeaveDetails" style="display: none">
                        <table id="tblLeaveDetails" class='table table-bordered table-striped'>
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Half Day</th>
                                    <th>Full Day</th>
                                </tr>
                            </thead>
                            <tbody id="tblBodyLeaveDetails"></tbody>
                        </table>
                    </div>
                    <div class="form-group" id="divNoOfWorking" style="display:none">
                        <div>
                            <label>Number Of Working Days:</label>
                            <span id="lblTotalWorkingDays">0</span>
                        </div>
                    </div>
                    <div class="form-group" id="CompoDatePicker" style="display:none;width:517px;">
                        <label>Date <span style="color:red">*</span> :</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="datepicker">
                        </div>
                        <!-- /.input error -->
                        <div class="form-group has-error" style="display:none" id="divDateError">
                            <label class="control-label" for="datepicker">
                                <i class="fa fa-times-circle-o"></i> Please select Date
                            </label>
                        </div>
                    </div>
                    <div class="form-group" id="SickDatePicker" style="display:none;width:517px;">
                        <label>Date:</label>
                        <div class="input-group date">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="sickDate" readonly="readonly">
                        </div>
                        <!-- /.input group -->
                    </div>
                    <div class="form-group">
                        <div>
                            <label>Reason <span style="color:red">*</span> :</label>
                        </div>
                        <div>
                            <textarea id="leaveComment" rows="3" style="width:520px;resize:none" placeholder="Enter ..."></textarea>
                        </div>
                        <div class="form-group has-error" style="display:none" id="divCommentError">
                            <label class="control-label" for="leaveComment">
                                <i class="fa fa-times-circle-o"></i> Please enter the reason
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnLeaveRequestSubmit" style="background-color:black !important" class="btn btn-primary">Submit</button>
                @*<button type="button" id="btnCasualAdvanceLeaveSubmit" style="background-color:#47a97e !important;display:none;" class="btn btn-primary">Yes</button>*@
                <button type="button" class="btn btn-default pull-right Close" data-dismiss="modal">Cancel</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- /.content -->
<!-- ./wrapper -->
<!-- DataTables -->
<script src="../../plugins/datatables/jquery.dataTables.min.js"></script>
<script src="../../plugins/datatables/dataTables.bootstrap.min.js"></script>
<!-- page script -->
<script src="~/plugins/BootstrapToggle/bootstrap-toggle.min.js"></script>
<script src="~/plugins/daterangepicker/moment.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>*@
<script src="../../plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap datepicker -->
<script src="../../plugins/datepicker/bootstrap-datepicker.js"></script>
<script src="../../plugins/iCheck/icheck.min.js"></script>
<script src="../../plugins/Toastr/toastr.js"></script>
<script>
    var fromDate;
    var toDate;
    var IsFullDay =true;
    var totalcasualLeft = '@totalCasualLeaveLeft';
    var sickLeaveId = '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))';
    var totalAdvanceLeaveLeft = '@totalAdvanceLeaveLeft';
    var isPossibleToApplyCompo ='@totalCompOffSubmitted';
    var isPossibleToApplyCasual='@totalCasualSubmitted';
    var totalLOPSubmitted=@totalLOPSubmitted;
    var advanceLeaveEnum='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))';
    var lopEnum='@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))';
    var dateExists='@Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.DateAlreadyExists)';
    //set default
    if(totalcasualLeft!="")
    {
        if(totalcasualLeft<=0 || totalcasualLeft-isPossibleToApplyCasual<=0)
        {
            $("#RdLeaveType_" + advanceLeaveEnum).removeAttr('disabled');
            $("#RdLeaveType_" + advanceLeaveEnum).parent().removeClass('disabled','disabled');
            $("#RdLeaveType_" + lopEnum).parent().removeClass('disabled','disabled');
            $("#RdLeaveType_" + lopEnum).removeAttr('disabled');
        }
    }
    $('#sickDate').datepicker({
        format : '@dateFormatDatePicker',
        autoclose: true,

    })
    function formatDate(date) {
        var mm = date.getMonth() + 1;
        var dd = date.getDate();
        var yyyy = date.getFullYear();
        mm = (mm < 10) ? '0' + mm : mm;
        return dd + "/" + mm + "/" + yyyy;
    }
    var today = (formatDate(new Date()));
    $('#sickDate').datepicker('setDate', today);

    $("#RdLeaveType_" + sickLeaveId).iCheck('check');
    $('#SickDatePicker').show();

    $("#LOP").change(function() {
        OnchangeCountCalculation( $("#LOP").val(),false);
    });



    $("#totalAdvanceLeave").change(function() {
        OnchangeCountCalculation($("#totalAdvanceLeave").val(),true);
    });
    $("#LOP").keypress(function(event){
        return (event.charCode >= 48 && event.charCode <= 57)
    });
    $("#totalAdvanceLeave").keypress(function(event){
        return event.charCode >= 48 && event.charCode <= 57;
    });

    function addWeekdays(date, days) {
        date = moment(date); // use a clone
        while (days > 0) {
            date = date.add(1, 'days');
            // decrease "days" only if it's a weekday.
            if (date.isoWeekday() !== 6 && date.isoWeekday() !== 7) {
                days -= 1;
            }
        }
        return date;
    }


    var totalCompOffDate = @Html.Raw(Json.Encode(CompOffDateList));
    var loop=[];
    for(i = 0;i<totalCompOffDate.length;i++)
    {
        loop.push(new Date(parseInt( totalCompOffDate[i].substr(6, 13))).getTime());
    }

    $(document).on('click', '#btnaddleave', function (e) {
        //if (isPossibleToApplyLeave == 0) {
        //    $('.modal-footer').hide();
        //}
        $("#RdLeaveType_" + sickLeaveId).iCheck('check');
        $('#sickDate').prop("disabled", true);
        $("#toggle-advance").hide();
        $("#btnLeaveRequestSubmit").show();
        $("#btnCasualAdvanceLeaveSubmit").hide();
        $('#sickDate').datepicker('setDate', today);
        $('#divDateRange').hide();
        $('#divNoOfWorking').hide();
        $('#leaveComment').val("");
        $('#CompoDatePicker').hide();
        $('.modal-footer').show();
        $('#divDateError').hide();
        $('#toggleOne').bootstrapToggle('on');
        $('#divCommentError').hide();
        if (responseCode==dateExists) {
            $('.modal-footer').hide();
        }
        $('#divLeaveDetails').hide();
        $('#tblBodyLeaveDetails').html("");
        $("#divLeaveTypeError").hide();
        $('#SickDatePicker').show();
        $('#divHalfDay').show();
    });

    var responseCode=0;
    function GetAppliedLeaveDateList()
    {
        var date = $("#sickDate").datepicker('getDate');
        fromDate=date.toLocaleDateString();
        toDate = fromDate;
        $.ajax({
            cache: false,
            type: 'post',
            url: '/ApplyLeave/CheckLeaveAvailability',
            data:{fromDate:fromDate,toDate:toDate,leaveType:0},
            dataType: "json",
            success: function (data) {
                responseCode=data.result.responseCode;
                if (responseCode==dateExists) {
                    $('.modal-footer').hide();
                }
            }
        });

    }
    $(document).ready(function () {
        GetAppliedLeaveDateList();
        $('#applyLeave').parent().addClass('active');
        $('.toggle-on').css("background-color", "#47a97e");
        $(document).on('click','#leaveDatepickerIcon',function(){
            $("#leaveDatePicker").data('daterangepicker').toggle();
        });
        $('#sickDate').datepicker({
            format: '@dateFormatDatePicker',
            autoclose: true,
        })
        $('#datepicker').datepicker({
            format: '@dateFormatDatePicker',
            autoclose: true,
        })

   .on('changeDate', function (ev) {
       $('#divDateError').hide();
       var date = ev.date;
       console.log(ev.date);
       var newDate = new Date(date).getTime();
       console.log(newDate);
       if ($.inArray(newDate, loop) > -1)
       {
           showMessage("@MessageResources.Err_SelectedDateAlreadyExist", "@messageType_Error", true);
           $('#datepicker').datepicker('hide');
           $('#datepicker').val("");
       }

   });
        $(function () {
            $('#example1').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": false,
                "ordering": false,
                "info": true,
                "autoWidth": false,
            });
            $('#tblLeaveDetails').DataTable({
                "paging": false,
                "lengthChange": true,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
            });
            $("#example1.dataTables_filter").hide();
            $("#tblLeaveDetails.dataTables_filter").hide();
            $('#leaveDatepicker ').daterangepicker(
                {
                    locale: {
                        format : '@dateFormatDateRangePicker'
                    },
                    minDate: new Date('@empDateOfJoining.Date')
                });

            $('#leaveDatepicker').on('change.daterangepicker', function (ev, picker) {
                var date = ev.target.value;
                var dates = [];
                dates = date.split('-');
                var start = dates[0].trim();
                var startDate = new Date(start);
                var startMonth = startDate.getMonth() + 1;
                fromDate = startDate.getFullYear() + "-" + startMonth + "-" + startDate.getDate();
                var end = dates[1].trim();
                var endDate = new Date(end);
                var endMonth = endDate.getMonth() + 1;
                toDate = endDate.getFullYear() + "-" + endMonth + "-" + endDate.getDate();
                $("#toggle-advance").hide();
                $('#divDatePickerError').hide();
            });
            $('#datepicker').on('changeDate', function (ev) {
                var date = $("#datepicker").datepicker('getDate');
                fromDate=date.toLocaleDateString();
                toDate = fromDate;
                $.ajax({
                    cache: false,
                    type: 'post',
                    url: '/ApplyLeave/CheckLeaveAvailability',
                    data:{fromDate:fromDate,toDate:toDate,leaveType:0},
                    dataType: "json",
                    success: function (data) {
                        responseCode=data.result.responseCode;
                        if (responseCode==dateExists) {
                            showMessage("@MessageResources.Err_LeaveAlreadyApplied","@messageType_Error",true);
                            $('.modal-footer').hide();
                        }
                        else
                        {
                            $('.modal-footer').show();
                        }
                    }
                });
            });

            $('#leaveDatepicker ').on('apply.daterangepicker', function (ev, picker) {
                var start = picker.startDate;
                fromDate = start.format('YYYY-MM-DD');
                var end = picker.endDate;
                toDate = end.format('YYYY-MM-DD');
                var leaveType = $('input[name=r1]:checked').val();
                $.ajax({
                    cache: false,
                    type: 'post',
                    url: '/ApplyLeave/CheckLeaveAvailability',
                    data:{fromDate:fromDate,toDate:toDate,leaveType:leaveType},
                    dataType: "json",
                    success: function (data) {
                        switch(data.result.responseCode)
                        {
                            case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.NoLeaveBalance):
                                if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))') {
                                    var availableLeaveBalance = "@string.Format(MessageResources.Err_AvailableCasualLeaves, "+data.result.availableLeaveBalance+")";
                                    availableLeaveBalance = availableLeaveBalance.replace("+data.result.availableLeaveBalance+", data.result.availableLeaveBalance);
                                    showMessage(availableLeaveBalance,"@messageType_Error",true);
                                }
                                else if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))')
                                {
                                    var lopLeaveBalance = "@string.Format(MessageResources.Err_lopLeaveBalanceMessage, "+data.result.lopLeaveBalance+")";
                                    lopLeaveBalance = lopLeaveBalance.replace("+data.result.lopLeaveBalance+", data.result.lopLeaveBalance);
                                    showMessage(lopLeaveBalance,"@messageType_Error",true);
                                }
                                else if(leaveType == '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))')
                                {
                                    var advanceLeaveBalance = "@string.Format(MessageResources.Err_AdvanceLeaveBalanceMessage, "+data.result.advanceLeaveBalance+")";
                                    advanceLeaveBalance = advanceLeaveBalance.replace("+data.result.advanceLeaveBalance+", data.result.advanceLeaveBalance);
                                    showMessage(advanceLeaveBalance,"@messageType_Error",true);
                                }
                                $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                $('.modal-footer').hide();
                                return false;
                                break;
                            case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.DateAlreadyExists):
                                showMessage("@MessageResources.Err_LeaveAlreadyApplied","@messageType_Error",true);
                                $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                $('.modal-footer').hide();
                                return false;
                                break;
                            case @Convert.ToInt16(LMS_WebAPP_Utils.ResponseCodes.OK):
                                $("#lblTotalWorkingDays").html(data.result.noOfWorkingDays);
                                $('.modal-footer').show();
                                if(data.result.noOfWorkingDays != "0")
                                {
                                    $('#divLeaveDetails').show();
                                }
                                else
                                {
                                    $('#divLeaveDetails').hide();
                                }
                                var between = [];
                                var datePickedStr1 = picker.startDate;
                                var datePickedDate1 = new Date(datePickedStr1);//converts string to date object

                                var datePickedStr2 = picker.endDate;
                                var datePickedDate2 = new Date(datePickedStr2);
                                while (datePickedDate1 <= datePickedDate2) {
                                    between.push(new Date(datePickedDate1));
                                    datePickedDate1.setDate(datePickedDate1.getDate() + 1);
                                }
                                var htmlContent = "";
                                for (var j = 0; j < between.length; j++) {
                                    var day = between[j].getDay();
                                    var isHoliday = 0;
                                    for(hl=0; hl<data.result.HolidayList.length ; hl++)
                                    {
                                        if(formatDate(between[j])==formatDate(data.result.HolidayList[hl].FormattedDate))
                                        {
                                            isHoliday = 1;
                                            break;
                                        }
                                    }
                                    var isWeekend = (day == 6) || (day == 0);
                                    if(!isWeekend && !isHoliday){
                                        htmlContent += "<tr><td>" + formatDate(between[j]) + "</td><td><input type='radio' class='leave-selection half-day' name='leave-type-" + j +"' class='flat-red' /></td><td><input class='leave-selection full-day' type='radio' name='leave-type-"+ j +"' class='flat-red' checked='checked' /></td></tr>";
                                    }
                                }
                                $('#tblBodyLeaveDetails').html(htmlContent);
                                return false;
                                break;
                        }
                    }
                });
            });
        });
        $(document).on('click', '.leave-selection', function(){
            if($(this).hasClass('half-day')){
                var workingDays = parseFloat( $("#lblTotalWorkingDays").html());
                $("#lblTotalWorkingDays").html(workingDays - 0.5);
            }
            else if($(this).hasClass('full-day')){
                var workingDays = parseFloat( $("#lblTotalWorkingDays").html());
                $("#lblTotalWorkingDays").html(workingDays + 0.5);
            }
        });
        function formatDate(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

           //return [year, month, day].join('/');
           return [day, month, year].join('/');
        }
        $('#AddLeaveModal').on('hidden.bs.modal', function () {
            $(this).find("textarea#leaveComment").val('').end();
            $('#divHalfDay').show();
            $("#divCommentError").hide();
            $('#SickDatePicker').show();
            // $('#sickDate').val(today);
            $("#divLeaveTypeError").hide();
            var clickedradioButton = $('input[name=r1]:checked').val();
            $("#RdLeaveType_" + clickedradioButton).iCheck('uncheck');
        });
    });
    $(function () {
        $('#toggleOne').bootstrapToggle({
            on: 'Full Day',
            off: 'Half Day'
        });
    })

    $(function () {
        $('#toggleOne').change(function () {
            var clickedradioButton = $('input[name=r1]:checked').val();
            if ($(this).prop('checked')) {
                IsFullDay = true;
            }
            else {
                IsFullDay = false;

                switch (clickedradioButton) {
                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                        $("#lblTotalWorkingDays").html("0.5");
                        break;
                    default:
                        break;
                }

            }
        })
    })

    $('input').off('ifChecked').on('ifChecked', function (event) {
        var clickedradioButton = $('input[name=r1]:checked').val();
        switch (clickedradioButton) {
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':
                GetAppliedLeaveDateList();
                console.log("SickLeave");
                $('#sickDate').prop("disabled", true);
                $("#toggle-advance").hide();
                $('#divDateRange').hide();
                $('#divNoOfWorking').hide();
                $('#divLeaveDetails').hide();
                // $('#leaveDatepicker').daterangepicker("hide");
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveComment').val("");
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divDateError').hide();
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                if (responseCode == dateExists) {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_SickLeaveAlreadyApplied", "@messageType_Error", true);
                    $('#datepicker').prop("disabled", true);
                }
                else{
                    $('#datepicker').prop("disabled", false);
                }
                $("#divLeaveTypeError").hide();
                $('#SickDatePicker').show();
                $('#divHalfDay').show();
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                $('#divDateRange').show();
                $('#divDatePickerError').hide();
                // $('#leaveDatepicker').daterangepicker("show");
                $('#divLeaveDetails').hide();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                if(totalcasualLeft<=0)
                {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_NoCasualLeaves", "2", true);
                    $('#leaveDatepicker').prop("disabled", false);
                }
                else if (isPossibleToApplyCasual > 0) {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_CannotApplyCasualOrAdvanceLeave", "@messageType_Error", true);
                    $('#leaveDatepicker').prop("disabled", true);
                }
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':
                $('#divDateRange').show();
                $('#divDatePickerError').hide();
                $('#divLeaveDetails').hide();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                if (isPossibleToApplyCasual > 0) {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_CannotApplyCasualOrAdvanceLeave", "@messageType_Error", true);
                    $('#leaveDatepicker').prop("disabled", true);
                }
                else{
                    $('#leaveDatepicker').prop("disabled", false);
                }
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                $('#divDateRange').hide();
                $('#divNoOfWorking').hide();
                $('#CompoDatePicker').show();
                $("#toggle-advance").hide();
                $("#datepicker").val("");
                $('#divCommentError').hide();
                $('.modal-footer').show();
                $('#divLeaveDetails').hide();
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveComment').val("");
                $('#divDateError').hide();
                $("#divLeaveTypeError").hide();
                $('#SickDatePicker').hide();
                $('#divHalfDay').hide();
                if (isPossibleToApplyCompo > 0) {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_CannotApplyCompOff", "@messageType_Error", true);
                    $('#datepicker').prop("disabled", true);
                }
                else{
                    $('#datepicker').prop("disabled", false);
                }
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))':
                //$("#toggelDiv").hide();
                $('#divDatePickerError').hide();
                $('#divLeaveDetails').hide();
                $('#divDateRange').show();
                $("#toggle-advance").hide();
                $('#divNoOfWorking').show();
                $('#CompoDatePicker').hide();
                $('.modal-footer').show();
                $('#divHalfDay').hide();
                // $('#leaveDatepicker').daterangepicker(
                //{
                //    minDate: new Date()
                //});
                //clear values
                $("#btnLeaveRequestSubmit").show();
                $("#btnCasualAdvanceLeaveSubmit").hide();
                $('#leaveDatepicker').val('');
                $('#SickDatePicker').hide();
                $("#lblTotalWorkingDays").html("0");
                $('#divDateError').hide();
                $('#leaveComment').val("");
                $('#toggleOne').bootstrapToggle('on');
                $('#divCommentError').hide();
                $("#divLeaveTypeError").hide();
                // $("#toggelDiv").slideToggle("slow");
                if (totalLOPSubmitted > 0) {
                    $('.modal-footer').hide();
                    showMessage("@MessageResources.Err_CannotApplyLOP", "@messageType_Error", true);
                    $('#leaveDatepicker').prop("disabled", true);
                }
                else{
                    $('#leaveDatepicker').prop("disabled", false);
                }
                break;
            default:
                break;

        }
        console.log("sick leave clicked;");
    });

    $("#leaveComment").keypress(function (e) {
        $('#divCommentError').hide();
    });
    $('input[name=r1]').parent().click(function (e) {
        $("#divLeaveTypeError").hide();
    });

    //Form validation

    function FormValidate() {
        var clickedradioButton = $('input[name=r1]:checked').val();
        switch (clickedradioButton) {
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':
                //check comments
                if ($("#leaveComment").val() != "") {
                    //set from date to date IsFullDay,noof working days
                    var date = $("#sickDate").datepicker('getDate');
                    fromDate=date.toLocaleDateString();
                    toDate = fromDate;
                    workingDays = 1;
                    return true;
                }
                else {
                    $('#divCommentError').show();
                    return false;
                }

                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                //check date
                if ($("#leaveComment").val() != "" && ($("#datepicker").val() != "" || $("#lblTotalWorkingDays").html()==0)) {
                    var date = $("#datepicker").datepicker('getDate');
                    fromDate=date.toLocaleDateString();
                    toDate = fromDate;
                    workingDays = 1;
                    return true;
                }
                else if ($("#datepicker").val() == "")
                {
                    $('#divDateError').show();

                }
                else if ($("#leaveComment").val() == "" && ($("#datepicker").val() == "" || $("#lblTotalWorkingDays").html()==0)) {
                    $('#divCommentError').show();
                    $('#divDateError').hide();
                    return false;
                }
                else {
                    if ($("#leaveComment").val() == "") {
                        $('#divCommentError').show();
                        $('#divDateError').hide();
                        return false;
                    }
                    else if ($("#datepicker").val() == "") {
                        $('#divDateError').show();
                        return false;
                    }
                }
                //check comment
                break;
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
            case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':

                //check date range
                //check comment
                if($("#lblTotalWorkingDays").html()>parseInt(@totalAdvanceLeaveLeft))
                {
                    showMessage("@MessageResources.Err_AdvanceLeaveMaxLimit  " + '@totalAdvanceLeaveLeft', "@messageType_Error", true);
                    return false;
                }
                else if ($('#leaveDatepicker').val()==""){
                    $('#divDatePickerError').show();
                    return false;
                }
                else  if ($("#leaveComment").val() != "" && ($("#leaveDatepicker").val() != ""|| $("#lblTotalWorkingDays").html()==0)) {
                    //set values
                    fromDate = fromDate;
                    toDate = toDate;
                    workingDays = $("#lblTotalWorkingDays").html();
                    return true;
                }
                else if ($("#leaveComment").val() == "" && ($("#leaveDatepicker").val() == "" || $("#lblTotalWorkingDays").html()==0)) {
                    $('#divCommentError').show();
                    return false;
                }
                else {
                    if ($("#leaveComment").val() == "") {
                        $('#divDatePickerError').hide();
                        $('#divCommentError').show();
                        return false;
                    }
                    else if ($("#leaveDatepicker").val() == "" || $("#lblTotalWorkingDays").html()==0) {
                        $('#divDatePickerError').show();
                        return false;
                    }
                }
                break;
            case '@Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.LOP)':
                if ($('#leaveDatepicker').val()==""){
                    $('#divDatePickerError').show();
                    return false;
                }
                else  if ($("#leaveComment").val() != "" && ($("#leaveDatepicker").val() != ""|| $("#lblTotalWorkingDays").html()==0)) {
                    //set from date to date IsFullDay,noof working days
                    fromDate = fromDate;
                    toDate = toDate;
                    workingDays = $("#lblTotalWorkingDays").html();
                    return true;
                }
                else {
                    $('#divCommentError').show();
                    return false;
                }
                if($("#lblTotalWorkingDays").html() > parseInt(@totalLOPCap)){
                    showMessage("@MessageResources.Err_LOPMaxLimit " + '@totalLOPCap', "@messageType_Error", true);
                    return false;

                }
                else
                {
                    workingDays = $("#lblTotalWorkingDays").html();
                    return true;
                }
            default:
                return true;
                break;
        }
    }

    // submitting leave request
    $(document).on('click', '#btnLeaveRequestSubmit', function (e) {
        if (FormValidate()) {
            $('#Loading').show();
            var comments = $("#leaveComment").val();
            var leaveType = $('input[name=r1]:checked').val();
            $.ajax({
                cache: false,
                type: 'post',
                url: '/ApplyLeave/SubmitLeaveRequest',
                data: { leaveType: leaveType, fromDate: fromDate, toDate: toDate, comments: comments, workingDays: workingDays, isFullDay: IsFullDay },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if(data.result)
                    {
                        $.ajax({
                            cache: false,
                            type: 'get',
                            url: '/ApplyLeave/GetEmployeeLeaveList',
                            dataType: "json",
                            success: function (data) {
                                $('#AddLeaveModal').modal('hide');
                                updateLeaveTable(data.result);
                                switch (leaveType) {
                                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.SickLeave))':

                                        //  if (IsFullDay == true) {
                                        responseCode=dateExists;
                                        //  }
                                        break;
                                        showMessage("@MessageResources.Msg_LeaveAdded", "@messageType_Success", true);
                                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CompoOff))':
                                        loop.push(new Date($('#datepicker').val()).getTime());
                                        isPossibleToApplyCompo = isPossibleToApplyCompo + 1 ;
                                        showMessage("@MessageResources.Msg_LeaveAdded", "@messageType_Success", true);
                                        break;
                                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':

                                        isPossibleToApplyCasual = isPossibleToApplyCasual + 1;
                                        if(leaveType==@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.CasualLeave)) && (totalcasualLeft <=0 || totalcasualLeft-workingDays<=0))
                                        {
                                            $("#RdLeaveType_" + advanceLeaveEnum).removeAttr('disabled');
                                            $("#RdLeaveType_" + advanceLeaveEnum).parent().removeClass('disabled','disabled');
                                            $("#RdLeaveType_" + lopEnum).parent().removeClass('disabled','disabled');
                                            $("#RdLeaveType_" + lopEnum).removeAttr('disabled');
                                        }
                                        showMessage("@MessageResources.Msg_LeaveAdded", "@messageType_Success", true);
                                        //$('#leaveDatepicker').daterangepicker(
                                        //{
                                        //    minDate: new Date()
                                        //});
                                        break;
                                    case '@Convert.ToInt16((LMS_WebAPP_Utils.LeaveType.LOP))':

                                        totalLOPSubmitted = totalLOPSubmitted + 1;

                                        showMessage("@MessageResources.Msg_LOPAdded", "@messageType_Success", true);
                                        break;
                                    default:
                                        showMessage("@MessageResources.Msg_LeaveAddedForApproval", "@messageType_Success", true);
                                        break;
                                }


                                $('#Loading').hide();
                                $('#datepicker').val("");
                                $('#SelectReason').val("");
                            }
                        });
                    }
                }
            });
        }
    }
    );
    $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
        checkboxClass: 'icheckbox_flat-green',
        radioClass: 'iradio_flat-green'
    });



    $(document).on('click', '#btnDeleteLeave', function (e) {
        var id = $(this).data("content");
        var deletedDate =($(this).parent().parent().find("td:nth-child(1)")[0].innerText);
        var leaveTypes=($(this).parent().parent().find("td:nth-child(6)")[0].innerText);
        $.ajax({
            cache: false,
            type: 'post',
            url: '/ApplyLeave/DeleteLeaveRequest',
            data: { leaveId: id },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                switch (leaveTypes) {

                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.CompoOff))':
                        loop.pop(new Date(deletedDate).getTime());
                        isPossibleToApplyCompo = isPossibleToApplyCompo - 1 ;
                        break;
                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.CasualLeave))':
                        isPossibleToApplyCasual = isPossibleToApplyCasual - 1;
                        break;
                    case '@(LMS_WebAPP_Utils.CommonMethods.Description(LMS_WebAPP_Utils.LeaveType.AdvanceLeave))':
                        isPossibleToApplyCasual = isPossibleToApplyCasual - 1;
                        break;
                    default:

                        break;
                }
                updateLeaveTable(data.result);
                showMessage("@MessageResources.Msg_LeaveDeleted","@messageType_Success",true);
            }
        });
    }
   );

    function convertToJsonDate(jsonDate) {
        if (jsonDate != undefined && jsonDate != null) {
            var regex = /-?\d+/;
            var matches = regex.exec(jsonDate);
            var date = new Date(parseInt(matches[0]));
            var d = new Date(date);
            if (d.getFullYear() < 2000) {
                return "";
            }
            if (!isNaN(d.getDate()) && !isNaN(d.getMonth()) && !isNaN(d.getFullYear())) {
                formattedDate = d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear();
                return formattedDate;
            }
            else {
                return "";
            }
        }
        else {
            return "";
        }
    }

    function updateLeaveTable(data) {
        $("#tblAppliedLeave").html("");
        var refStatus=0;
        var html = "<table id='example1' class='table table-bordered table-striped'><thead>" +
                "<tr><th>From Date</th><th>To Date</th><th>Submitted Date</th><th>Status</th>" +
                    "<th style=width:160px'>Number of working Days</th><th>Leave Type</th><th>Delete</th></tr></thead><tbody>";
        for (var i = 0; i < data.length; i++) {
            if(data[i].RefLeaveType!='@Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.RewardLeave)' && data[i].RefLeaveType!='@Convert.ToInt16(LMS_WebAPP_Utils.LeaveType.EarnedLeave)')
            {
                html += "<tr><td>" + data[i].FormattedDate + "</td><td>" + data[i].FormattedToDate + "</td>" +
                   "<td>" + data[i].FormattedCreated + "</td>" +
                           "<td>" + data[i].StatusName + "</td><td>";
                html += data[i].NumberOfWorkingDays + "</td>" +
               "<td>" + data[i].LeaveTypeName + "</td>";
                if (data[i].RefStatus != '@Convert.ToInt16(LMS_WebAPP_Utils.LeaveStatus.Approved)') {
                    html += "<td><a href='#' id='btnDeleteLeave' style='color:red' data-content='" + data[i].Id + "'><span class='fa fa-close'></span></a> </td> ";
                }
                else {
                    html += "<td></td>";
                }

                html += " </tr>";
            }}

        html += "</tbody></table>";
        $("#tblAppliedLeave").html(html);
        $('#example1').DataTable({
            "paging": true,
            "lengthChange": true,
            "searching": false,
            "ordering": true,
            "info": true,
            "autoWidth": false,
        });
    }
</script>
