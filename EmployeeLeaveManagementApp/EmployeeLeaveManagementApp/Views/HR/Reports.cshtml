@model List<LMS_WebAPP_Domain.EmployeeDetailsModel>
@using LMS_WebAPP_Utils
@{
    ViewBag.Title = "Reports";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var profileId = ((LMS_WebAPP_Domain.UserAccount)Session[Constants.SESSION_OBJ_USER]) != null ? ((LMS_WebAPP_Domain.UserAccount)Session[Constants.SESSION_OBJ_USER]).RefProfileType : 0;
}

<link rel="stylesheet" href="../../plugins/select2/select2.min.css">
<link rel="stylesheet" href="../../dist/css/AdminLTE.min.css">
<link href="~/plugins/Toastr/toastr.css" rel="stylesheet" />
<link rel="stylesheet" href="~/plugins/datatables/dataTables.bootstrap.css">
<link href="~/Content/Style.css" rel="stylesheet" />

<section class="content-header" style="height:41px">
    <h1 class="col-md-9" style="padding-left:0px">
        Reports
    </h1>
</section>
<section class="content">
    <div class="row">
        @if (profileId == (int)ProfileType.CEO)
        {
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Project Report</h3>
                    <div class="pull-right box-tools">
                        @*<div style="padding-top:25px;display:none" id="divViewDetails">
                            <a href="#" style="padding-left:20px" id="viewProjectEmployeeDetails">View Details </a>
                        </div>*@
                        <button class="btn" data-toggle="tooltip" id="viewProjectEmployeeDetails" title="View Details">
                            <i class="fa fa-table"></i>
                        </button>
                        <button class="btn" data-toggle="tooltip" id="btnExportProjectwiseReport" title="Export">
                            <i class="fa fa-file-excel-o"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="col-md-3" style="padding-left:27px">
                        <label>Project Name <span style="color:red">*</span>:</label>
                        <select class="form-control projectSelect" style="width: 100%;" id="ddlProjectName">
                            <option value="0">Select</option>
                        </select>
                    </div>
                    <div class="form-group has-error" style="display:none" id="divProjectNameError">
                        <label class="control-label">
                            <i class="fa fa-times-circle-o"></i> Please select ProjectName
                        </label>
                    </div>
                    @*<div class="col-md-2">
                        <label>From Month <span style="color:red">*</span>:</label>
                        <select class="form-control ddlMonth" id="ddlFromMonthName">
                            <option value="">Select</option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">Jun</option>
                            <option value="7">Jul</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label>To Month <span style="color:red">*</span>:</label>
                        <select class="form-control ddlMonth" id="ddlToMonthName">
                            <option value="">Select</option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">Jun</option>
                            <option value="7">Jul</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>*@
                    <div class="col-md-2">
                        <label>Year <span style="color:red">*</span>:</label>
                        <select id="ddlYear" class="form-control yearSelect" style="width: 100%;">
                            <option value="">Select</option>
                            <option>@DateTime.Now.AddYears(-1).Year</option>
                            <option>@DateTime.Now.Year</option>
                            <option>@DateTime.Now.AddYears(1).Year</option>
                        </select>
                    </div>
                    <div class="col-md-1" style="padding-top:25px">
                        <button type="button" id="btnGenerateProjectReport" style="background-color:#222d32 !important" class="btn btn-primary">Submit</button>
                    </div>
                 
                    <div style="padding-top:70px">
                        <div id="bar-chart" style="height: 300px;"></div>
                    </div>
                    @*<div id="donut-chart" style="height: 300px;"></div>*@
                    <!-- /.row -->

                </div>
                <!-- /.box-body-->
            </div>
        </div>
        }
        <div class="col-md-6">
            <!-- general form elements -->
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Generate Report</h3>
                    <div class="pull-right box-tools">
                        <button class="btn" data-toggle="tooltip" id="btnExportDetails" data-content="1" title="Export">
                            <i class="fa fa-file-excel-o"></i>
                        </button>
                        <button class="btn" data-toggle="tooltip" id="btnSendMail" data-content="2" title="Share as attachment">
                            <i class="fa fa-envelope"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        <label>Employee Name <span style="color:red">*</span> :</label>
                        <select class="form-control ddlEmployee" multiple="multiple" style="width: 100%;" id="ddlEmployeeName">
                            <option value="0">All</option>
                            @foreach (var m in Model)
                            {
                                <option id="@m.Id" value="@m.Id">@m.FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group has-error" style="display:none" id="divEmployeeNameError">
                        <label class="control-label" for="EmployeeName">
                            <i class="fa fa-times-circle-o"></i> Please select employee
                        </label>
                    </div>
                    <div class="form-group">
                        <div>
                            <label>Date range:</label>
                        </div>

                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </div>
                            <input type="text" class="form-control pull-right" id="reportDatepicker">
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Leave Type <span style="color:red">*</span> :</label>
                        <select class="form-control ddlLeave" multiple="multiple" style="width: 100%;" id="ddlLeaveType">
                            <option value="0">All</option>
                            <option value="1">Applied Leaves</option>
                            <option value="2">Work from Home</option>
                            <option value="3">Loss of Pay</option>
                            <option value="3">Advanced Leaves</option>
                            <option value="3">Comp Off</option>
                        </select>
                    </div>
                    <div class="form-group has-error" style="display:none" id="divLeaveTypeError">
                        <label class="control-label" for="LeaveType">
                            <i class="fa fa-times-circle-o"></i> Please select leave type
                        </label>
                    </div>
                    @*<div class="form-group">
                            <label for="txtlastname">Export As</label>
                            <select class="form-control select2" style="width: 100%;" id="ddlExportType">
                                <option value="0">Select</option>
                                <option value="1">Excel</option>
                                <option value="2">Share as Attachment</option>

                            </select>
                        </div>*@
                </div>
                @*<div class="box-footer">
                        <button type="button" id="btnGenerateReport" style="background-color:#222d32 !important" class="btn btn-primary">Submit</button>
                    </div>*@
            </div>
        </div>
        <div class="col-md-6">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Employee Individual Report</h3>
                    <div class="pull-right box-tools">
                        <button class="btn" data-toggle="tooltip" id="btnExportIndividualReport" title="Export">
                            <i class="fa fa-file-excel-o"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        <label>Employee Name <span style="color:red">*</span> :</label>
                        <select class="form-control ddlEmployeeSelect" style="width: 100%;" id="ddlEmployeeId">
                            <option value="0">Select</option>
                            @foreach (var m in Model)
                            {
                                <option id="@m.Id" value="@m.Id">@m.FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group has-error" style="display:none" id="divEmpNameError">
                        <label class="control-label" for="EmpName">
                            <i class="fa fa-times-circle-o"></i> Please select employee
                        </label>
                    </div>
                    @*<div id="donut-chart" style="height: 300px;"></div>*@
                    <div class="row">
                        <div class="col-md-8">
                            <div class="chart-responsive" id="pieChartContent">
                                <canvas id="pieChart" height="260" width="380"></canvas>
                            </div>
                            <!-- ./chart-responsive -->
                        </div>
                        <!-- /.col -->
                        <div class="col-md-4">
                            <ul class="chart-legend clearfix">
                                <li><i class="fa fa-circle-o text-red"></i> Loss of Pay :<text id="lopText">0</text></li>
                                <li><i class="fa fa-circle-o text-green"></i> Comp Off : <text id="compOffText">0</text></li>
                                <li><i class="fa fa-circle-o text-yellow"></i> Advanced Leaves :<text id="advancedLeavesText">0</text></li>
                                <li><i class="fa fa-circle-o text-aqua"></i> Work from Home :<text id="wfhText">0</text></li>
                                <li><i class="fa fa-circle-o text-light-blue"></i> Casual Leaves :<text id="CasualLeavesText">0</text></li>
                                <li><i class="fa fa-circle-o text-lime"></i> Sick Leaves :<text id="SickLeavesText">0</text></li>
                            </ul>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->

                </div>
                <!-- /.box-body-->
            </div>
        </div>
    </div>

    <!-- /.row -->
</section>
<div class="modal fade" id="viewDetailsModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content border-radius-modalBottom">
            <div class="modal-header modalHeaderStyle">
                <button type="button" class="close text-color-white" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h3 class="modal-title" id="exampleModalLabel">Project Detail Report for <text id="txtDuration"></text></h3>
            </div>
            <div class="modal-body" id="tableBody">

            </div>

        </div>
    </div>
</div>
<script src="../../plugins/select2/select2.full.min.js"></script>
<script src="~/plugins/daterangepicker/moment.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.11.2/moment.min.js"></script>*@
<script src="../../plugins/daterangepicker/daterangepicker.js"></script>
<script src="~/plugins/chartjs/Chart.min.js"></script>
<!-- FLOT CHARTS -->
<script src="~/plugins/flot/jquery.flot.min.js"></script>
<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
<script src="~/plugins/flot/jquery.flot.pie.min.js"></script>
<script src="~/plugins/flot/jquery.flot.categories.min.js"></script>
<script src="~/plugins/flot/jquery.flot.resize.min.js"></script>
<script src="../../plugins/Toastr/toastr.js"></script>
<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatables/dataTables.bootstrap.min.js"></script>
<script>
    var reportFromDate;
    var reportToDate;
    var date = new Date();
    var year = date.getFullYear();
    var profileType=@profileId;
    var profileIdEnum='@Convert.ToInt32(ProfileType.CEO)';
    $(document).ready(function () {
        $('#reports').parent().addClass('active');
        GetProjectsList();
        $(function () {
            if(profileType==profileIdEnum)
            {
            var bar_data = {
                data: [["January", 0], ["February", 0], ["March", 0], ["April", 0], ["May", 0], ["June", 0], ["July", 0], ["August", 0], ["September", 0], ["October", 0], ["November", 0], ["December", 0]],
                color: "#3c8dbc"
            };
            $.plot("#bar-chart", [bar_data], {
                grid: {
                    borderWidth: 1,
                    borderColor: "#f3f3f3",
                    tickColor: "#f3f3f3"
                },
                series: {
                    bars: {
                        show: true,
                        barWidth: 0.5,
                        align: "center"
                    }
                },
                xaxis: {
                    mode: "categories",
                    tickLength: 0
                },
                yaxis: {
                    min: 0
                },
            });
        }
            var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
            var pieChart = new Chart(pieChartCanvas);
            var PieData = [
                              {
                                  value: 1,
                                  color: "#d7d9dd",
                                  highlight: "#d7d9dd",
                                  label: "No Data"
                              },

            ];
            var pieOptions = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke: true,
                //String - The colour of each segment stroke
                segmentStrokeColor: "#fff",
                //Number - The width of each segment stroke
                segmentStrokeWidth: 1,
                //Number - The percentage of the chart that we cut out of the middle
                percentageInnerCutout: 50, // This is 0 for Pie charts
                //Number - Amount of animation steps
                animationSteps: 100,
                //String - Animation easing effect
                animationEasing: "easeOutBounce",
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true,
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: false,
                //String - A legend template
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
                //String - A tooltip template
                tooltipTemplate: "<%=label%>"
            };
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            pieChart.Doughnut(PieData, pieOptions);
            $(".ddlEmployeeSelect").select2().on('change', function (e) {
                var empId = $("#ddlEmployeeId").val();
                if (empId != 0) {
                    $.ajax({
                        cache: false,
                        type: 'post',
                        url: '/HR/GetChartDetails?employeeId=' + empId,
                        dataType: "json",
                        processData: false,
                        success: function (data) {
                            $("#lopText").html(data.result.LossofPayCount);
                            $("#wfhText").html(data.result.WorkFromHomeCount);
                            $("#advancedLeavesText").html(data.result.AdvancedLeavesCount);
                            //$("#appliedLeavesText").html(data.result.AppliedLeavesCount);
                            $("#CasualLeavesText").html(data.result.AppliedCasualLeavesCount);
                            $("#SickLeavesText").html(data.result.AppliedSickLeavesCount);
                            $("#compOffText").html(data.result.CompOffCount);
                            if (data.result.LossofPayCount == 0 && data.result.WorkFromHomeCount == 0 && data.result.AdvancedLeavesCount == 0 && data.result.AppliedLeavesCount == 0 && data.result.CompOffCount == 0) {
                                var pieChartContent = document.getElementById('pieChartContent');
                                pieChartContent.innerHTML = '&nbsp;';
                                $('#pieChartContent').append('<canvas id="pieChart" height="220" width="360"><canvas>');
                                var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
                                var pieChart = new Chart(pieChartCanvas);
                                var PieData = [
                                  {
                                      value: 1,
                                      color: "#d7d9dd",
                                      highlight: "#d7d9dd",
                                      label: "No Data"
                                  },
                                ]
                                var pieOptions = {
                                    //Boolean - Whether we should show a stroke on each segment
                                    segmentShowStroke: true,
                                    //String - The colour of each segment stroke
                                    segmentStrokeColor: "#fff",
                                    //Number - The width of each segment stroke
                                    segmentStrokeWidth: 1,
                                    //Number - The percentage of the chart that we cut out of the middle
                                    percentageInnerCutout: 50, // This is 0 for Pie charts
                                    //Number - Amount of animation steps
                                    animationSteps: 100,
                                    //String - Animation easing effect
                                    animationEasing: "easeOutBounce",
                                    //Boolean - Whether we animate the rotation of the Doughnut
                                    animateRotate: true,
                                    //Boolean - Whether we animate scaling the Doughnut from the centre
                                    animateScale: false,
                                    //Boolean - whether to make the chart responsive to window resizing
                                    responsive: true,
                                    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                                    maintainAspectRatio: false,

                                    //String - A legend template
                                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
                                    //String - A tooltip template
                                    tooltipTemplate: "<%=label%>"
                                };
                                pieChart.Doughnut(PieData, pieOptions);
                            }
                            else {
                                var pieChartContent = document.getElementById('pieChartContent');
                                pieChartContent.innerHTML = '&nbsp;';
                                $('#pieChartContent').append('<canvas id="pieChart" height="220" width="360"><canvas>');
                                var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
                                var pieChart = new Chart(pieChartCanvas);
                                var PieData = [
                                  {
                                      value: data.result.LossofPayCount,
                                      color: "#f56954",
                                      highlight: "#f56954",
                                      label: "Loss Of Pay"
                                  },
                                  {
                                      value: data.result.CompOffCount,
                                      color: "#00a65a",
                                      highlight: "#00a65a",
                                      label: "Comp Off"
                                  },
                                  {
                                      value: data.result.AdvancedLeavesCount,
                                      color: "#f39c12",
                                      highlight: "#f39c12",
                                      label: "Advanced Leaves"
                                  },
                                  {
                                      value: data.result.WorkFromHomeCount,
                                      color: "#00c0ef",
                                      highlight: "#00c0ef",
                                      label: "Work From Home"
                                  },
                                  {
                                      value: data.result.AppliedCasualLeavesCount,
                                      color: "#3c8dbc",
                                      highlight: "#3c8dbc",
                                      label: "Casual Leaves"
                                  },
                                  {
                                      value: data.result.AppliedSickLeavesCount,
                                      color: "#00FF00",
                                      highlight: "#00FF00",
                                      label: "Sick Leaves"
                                  }
                                ];
                                var pieOptions = {
                                    //Boolean - Whether we should show a stroke on each segment
                                    segmentShowStroke: true,
                                    //String - The colour of each segment stroke
                                    segmentStrokeColor: "#fff",
                                    //Number - The width of each segment stroke
                                    segmentStrokeWidth: 1,
                                    //Number - The percentage of the chart that we cut out of the middle
                                    percentageInnerCutout: 50, // This is 0 for Pie charts
                                    //Number - Amount of animation steps
                                    animationSteps: 100,
                                    //String - Animation easing effect
                                    animationEasing: "easeOutBounce",
                                    //Boolean - Whether we animate the rotation of the Doughnut
                                    animateRotate: true,
                                    //Boolean - Whether we animate scaling the Doughnut from the centre
                                    animateScale: false,
                                    //Boolean - whether to make the chart responsive to window resizing
                                    responsive: true,
                                    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                                    maintainAspectRatio: false,

                                    //String - A legend template
                                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
                                    //String - A tooltip template
                                    tooltipTemplate: "<%=value %> <%=label%>"
                                };
                                //Create pie or douhnut chart
                                // You can switch between pie and douhnut using the method below.
                                pieChart.Doughnut(PieData, pieOptions);
                            }
                        }
                    });
                }
                else {
                    var pieChartContent = document.getElementById('pieChartContent');
                    pieChartContent.innerHTML = '&nbsp;';
                    $('#pieChartContent').append('<canvas id="pieChart" height="220" width="360"><canvas>');
                    var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
                    var pieChart = new Chart(pieChartCanvas);
                    var PieData = [
                      {
                          value: 1,
                          color: "#d7d9dd",
                          highlight: "#d7d9dd",
                          label: "No Data"
                      },
                    ]
                    var pieOptions = {
                        //Boolean - Whether we should show a stroke on each segment
                        segmentShowStroke: true,
                        //String - The colour of each segment stroke
                        segmentStrokeColor: "#fff",
                        //Number - The width of each segment stroke
                        segmentStrokeWidth: 1,
                        //Number - The percentage of the chart that we cut out of the middle
                        percentageInnerCutout: 50, // This is 0 for Pie charts
                        //Number - Amount of animation steps
                        animationSteps: 100,
                        //String - Animation easing effect
                        animationEasing: "easeOutBounce",
                        //Boolean - Whether we animate the rotation of the Doughnut
                        animateRotate: true,
                        //Boolean - Whether we animate scaling the Doughnut from the centre
                        animateScale: false,
                        //Boolean - whether to make the chart responsive to window resizing
                        responsive: true,
                        // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                        maintainAspectRatio: false,

                        //String - A legend template
                        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
                        //String - A tooltip template
                        tooltipTemplate: "<%=label%>"
                    };
                    pieChart.Doughnut(PieData, pieOptions);
                }
            });
            //Initialize Select2 Elements
            $(".ddlEmployee").select2().on('change', function (e) {
                if ($("#ddlEmployeeName").val() == "0" || $.inArray("0", $("#ddlEmployeeName").val()) != -1) {

                    if ($("#ddlEmployeeName option:selected").length > 1) {
                        $("#ddlEmployeeName").val('0').trigger("change");
                    };


                    var allOptions = $("#ddlEmployeeName option");
                    for (var i = 1; i < allOptions.length; i++) {
                        //var id = $(allOptions[i]).id;
                        $("#ddlEmployeeName").find('option[value=' + $(allOptions[i]).val() + ']').attr('disabled', 'disabled');
                    }

                } else {
                    $("#ddlEmployeeName > option").removeAttr("disabled");
                }
                $('.ddlEmployee').select2();
            });

            $(".ddlLeave").select2().on('change', function (e) {
                if ($("#ddlLeaveType").val() == "0" || $.inArray("0", $("#ddlLeaveType").val()) != -1) {

                    if ($("#ddlLeaveType option:selected").length > 1) {
                        $("#ddlLeaveType").val('0').trigger("change");
                    };


                    var allOptions = $("#ddlLeaveType option");
                    for (var i = 1; i < allOptions.length; i++) {
                        //var id = $(allOptions[i]).id;
                        $("#ddlLeaveType").find('option[value=' + $(allOptions[i]).val() + ']').attr('disabled', 'disabled');
                    }

                } else {
                    $("#ddlLeaveType > option").removeAttr("disabled");
                }
                $('.ddlLeave').select2();
            });
            $(".projectSelect").select2();

            $('#reportDatepicker').daterangepicker(
                  {
                      locale: {
                          format: 'DD/MM/YYYY'
                      }
                  });
            $('#reportDatepicker').on('change.daterangepicker', function (ev, picker) {
                var date = ev.target.value;
                var dates = [];
                dates = date.split('-');
                var start = dates[0].trim();
                var startDate = new Date(start);
                var startMonth = startDate.getMonth() + 1;
                reportFromDate = startDate.getFullYear() + "-" + startMonth + "-" + startDate.getDate();
                var end = dates[1].trim();
                var endDate = new Date(end);
                var endMonth = endDate.getMonth() + 1;
                reportToDate = endDate.getFullYear() + "-" + endMonth + "-" + endDate.getDate();
            });
            $('#reportDatepicker').on('apply.daterangepicker', function (ev, picker) {

                var start = picker.startDate;
                reportFromDate = start.format('YYYY-MM-DD');
                var end = picker.endDate;
                reportToDate = end.format('YYYY-MM-DD');

            });
        });
    });


    $(document).on('click', '#btnSendMail', function (e) {

        if (($("#ddlEmployeeName").val() == null) && ($("#ddlLeaveType").val() == null)) {
            $("#divEmployeeNameError").show();
            $("#divLeaveTypeError").show();
            return false;
        }
        if ($("#ddlEmployeeName").val() == null) {
            $("#divEmployeeNameError").show();
            return false;
        }
        if ($("#ddlLeaveType").val() == null) {
            $("#divLeaveTypeError").show();
            return false;
        }


        var employeeId = $("#ddlEmployeeName").val();
        var leaveType = $("#ddlLeaveType").val();
        //var exportAs = $("#ddlExportType").val();
        var exportAs = $(this).data("content");
        var fromDate = reportFromDate;
        var toDate = reportToDate;
        var data = "";
        var leaveData = "";
        for (var i = 0; i < employeeId.length; i++) {
            data += employeeId[i] + ":";
        }
        for (var i = 0; i < leaveType.length; i++) {
            leaveData += leaveType[i] + ":";
        }
        $("#Loading").show();
        $.ajax({
            cache: false,
            type: 'post',
            url: '/HR/GenerateReports',
            data: { employeeId: data, leaveType: leaveData, exportAs: exportAs, fromDate: fromDate, toDate: toDate },
            dataType: "json",
            success: function (data) {
                showMessage("Mail sent successfully", "1", true);
                $("#Loading").hide();
            }
        });
    }
    );
    $(document).on('click', '#btnExportDetails', function (e) {

        if (($("#ddlEmployeeName").val() == null) && ($("#ddlLeaveType").val() == null)) {
            $("#divEmployeeNameError").show();
            $("#divLeaveTypeError").show();
            return false;
        }
        if ($("#ddlEmployeeName").val() == null) {
            $("#divEmployeeNameError").show();
            return false;
        }
        if ($("#ddlLeaveType").val() == null) {
            $("#divLeaveTypeError").show();
            return false;
        }

        var exportAs = $(this).data("content");
        if ($("#ddlEmployeeName").val() == null && $("#ddlLeaveType").val() == null && reportFromDate == undefined && reportToDate == undefined) {
            showMessage("Select Employee Name,Leave Type and Date Range", "2", true);
            $(".ddlEmployee").select2({
                containerCssClass: "error"
            });
            return false;
        }
        var employeeId = $("#ddlEmployeeName").val();
        var leaveType = $("#ddlLeaveType").val();
        //var exportAs = $("#ddlExportType").val();
        var fromDate = reportFromDate;
        var toDate = reportToDate;
        var data = "";
        var leaveData = "";
        for (var i = 0; i < employeeId.length; i++) {
            data += employeeId[i] + ":";
        }
        for (var i = 0; i < leaveType.length; i++) {
            leaveData += leaveType[i] + ":";
        }
        window.location.href = "/HR/GenerateReports/?employeeId=" + data + "&leaveType=" + leaveData + "&exportAs=" + exportAs + "&fromDate=" + fromDate + "&toDate=" + toDate;
    })

    $(document).on('click', '#btnExportIndividualReport', function (e) {

        if ($("#ddlEmployeeId").val() == 0) {
            $("#divEmpNameError").show();
            return false;
        }
        var employeeId = $("#ddlEmployeeId").val();
        window.location.href = "/HR/GenerateIndividualReport/?employeeId=" + employeeId;
    })
    function labelFormatter(label, series) {
        return '<div style="font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;position:absolute">'
            + label
            + "<br>"
            + Math.round(series.percent) + "%</div>";
    }

    $('#ddlEmployeeId').on('change', function () {
        if ($("#ddlEmployeeId").val() != 0) {
            $("#divEmpNameError").hide();
        }
        else {
            $("#divEmpNameError").show();
        }
    });

    $('#ddlEmployeeName').on('change', function () {
            $("#divEmployeeNameError").hide();
    });

    $('#ddlLeaveType').on('change', function () {
            $("#divLeaveTypeError").hide();
       
    });
    $('#ddlProjectName').on('change', function () {

        $("#select2-ddlProjectName-container").parent().css("border-color", '#d2d6de');

    });
    //$('#ddlFromMonthName').on('change', function () {

    //    $("#ddlFromMonthName").css("border-color", '#d2d6de');

    //});
    //$('#ddlToMonthName').on('change', function () {

    //    $("#ddlToMonthName").css("border-color", '#d2d6de');

    //});
    $('#ddlYear').on('change', function () {

        $("#ddlYear").css("border-color", '#d2d6de');

    });



    $(document).on('click', '#btnGenerateProjectReport', function (e) {
        var projectName = $("#ddlProjectName").val();
        var fromMonth = "0";
        var toMonth ="0";
        var year = $("#ddlYear").val();
        errorExists = false;
        //$("#divViewDetails").hide();
        if (projectName == "0") {
            $("#select2-ddlProjectName-container").parent().css("border-color", 'red');
            errorExists = true;
        }
        if (fromMonth == "") {
            $("#ddlFromMonthName").css("border-color", 'red');
            errorExists = true;
        }
        if (toMonth == "") {
            $("#ddlToMonthName").css("border-color", 'red');
            errorExists = true;
        }

        if (year == "") {
            $("#ddlYear").css("border-color", 'red');
            errorExists = true;
        }
        if (errorExists) {
            return false;
        }
        else {
            //$("#divViewDetails").show();
            $.ajax({
                cache: false,
                type: 'post',
                url: '/HR/GetProjectwiseReport',
                data: { projectId: projectName, fromMonth: fromMonth, toMonth: toMonth, year: year },
                //contentType: "application/json",
                dataType: "json",
                success: function (data) {

                    //if (data.model.Jan != 0)
                    //{
                    //    ["January",data.model.Jan]
                    //}
                    var bar_data = {
                        data: [["January", data.data.Jan], ["February", data.data.Feb], ["March", data.data.Mar], ["April", data.data.Apr], ["May", data.data.May], ["June", data.data.Jun], ["July", data.data.Jul], ["August", data.data.Aug], ["September", data.data.Sep], ["October", data.data.Oct], ["November", data.data.Nov], ["December", data.data.Dec]],
                        color: "#3c8dbc"
                    };
                    $.plot("#bar-chart", [bar_data], {
                        grid: {
                            borderWidth: 1,
                            borderColor: "#f3f3f3",
                            tickColor: "#f3f3f3"
                        },
                        series: {
                            bars: {
                                show: true,
                                barWidth: 0.5,
                                align: "center"
                            }
                        },
                        xaxis: {
                            mode: "categories",
                            tickLength: 0
                        }
                    });
                }
            });
        }
    });

    function GetProjectsList() {
        $.ajax({
            cache: false,
            type: 'post',
            url: '/HR/GetProjectsList',
            contentType: "application/json",
            dataType: "json",
            success: function (data) {
                for (var i = 0; i < data.data.length; i++) {
                    $("#ddlProjectName").append($('<option></option>').attr("value", data.data[i].Id).text(data.data[i].ProjectName));
                }
            }
        });
    }

    function convertToJsonDate(jsonDate) {
        if (jsonDate != undefined && jsonDate != null) {
            var regex = /-?\d+/;
            var matches = regex.exec(jsonDate);
            var date = new Date(parseInt(matches[0]));
            var d = new Date(date);
            if (d.getFullYear() < 2000) {
                return "";
            }
            if (!isNaN(d.getDate()) && !isNaN(d.getMonth()) && !isNaN(d.getFullYear())) {
                formattedDate = d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear();
                return formattedDate;
            }
            else {
                return "";
            }
        }
        else {
            return "";
        }
    }
    $(document).on('click', "#viewProjectEmployeeDetails", function (e) {
        var projectName = $("#ddlProjectName").val();
        var fromMonth = "0";
        var toMonth ="0";
        var year = $("#ddlYear").val();
        errorExists = false;
        if (projectName == "0") {
            $("#select2-ddlProjectName-container").parent().css("border-color", 'red');
            errorExists = true;
        }
        if (fromMonth == "") {
            $("#ddlFromMonthName").css("border-color", 'red');
            errorExists = true;
        }
        if (toMonth == "") {
            $("#ddlToMonthName").css("border-color", 'red');
            errorExists = true;
        }

        if (year == "") {
            $("#ddlYear").css("border-color", 'red');
            errorExists = true;
        }
        if (errorExists) {
            return false;
        }
        var text=year;
        $("#txtDuration").html(text);
        $.ajax({
            cache: false,
            type: 'post',
            url: '/HR/GetProjectwiseEmployeeDetails',
            data: { projectId: projectName, fromMonth: fromMonth, toMonth: toMonth, year: year },
            dataType: "json",
            success: function (data) {

                $('#tableBody').html('');
                var fixedCartItemsHtml = "<table id='example1' class='table table-bordered table-striped'>" + " <thead> <tr>  <th>Project Name</th><th>Employee Name</th><th>Start Date</th><th>End Date</th>" +
                                       " </tr></thead><tbody>";

                for (var i = 0; i < data.data.length; i++) {
                    //date
                    var toDate = "Till Date";
                    if (convertToJsonDate(data.data[i].EndDate) != "@DateTime.Now.ToString("d-M-yyyy")") {
                        toDate = convertToJsonDate(data.data[i].EndDate);
                    }

                    fixedCartItemsHtml = fixedCartItemsHtml +
                                         "<tr>" +
                                         "<td>" + data.data[i].ProjectName +
                                         "</td>";
                    //Description
                    fixedCartItemsHtml = fixedCartItemsHtml +

                                         "<td>" + data.data[i].EmployeeName +
                                         "</td>";
                    fixedCartItemsHtml = fixedCartItemsHtml +

                                       "<td>" + convertToJsonDate(data.data[i].StartDate) +
                                       "</td>";
                    fixedCartItemsHtml = fixedCartItemsHtml +

                                       "<td>" + toDate +
                                       "</td></tr>";
                }
                fixedCartItemsHtml = fixedCartItemsHtml + "</tbody></table>";
                $('#tableBody').html(fixedCartItemsHtml);

                $('#example1').DataTable({
                    "paging": true,
                    "lengthChange": false,
                    "searching": false,
                    "ordering": true,
                    "info": true,
                    "autoWidth": false,
                });
                $("#viewDetailsModal").modal('show');
            }
        });
    });

    $(document).on('click', '#btnExportProjectwiseReport', function (e) {
        var projectId = $("#ddlProjectName").val();
        var fromMonth ="0";
        var toMonth = "0";
        var year = $("#ddlYear").val();
        errorExists = false;
        //$("#divViewDetails").hide();
        if (projectId == "0") {
            $("#select2-ddlProjectName-container").parent().css("border-color", 'red');
            errorExists = true;
        }
        if (fromMonth == "") {
            $("#ddlFromMonthName").css("border-color", 'red');
            errorExists = true;
        }
        if (toMonth == "") {
            $("#ddlToMonthName").css("border-color", 'red');
            errorExists = true;
        }

        if (year == "") {
            $("#ddlYear").css("border-color", 'red');
            errorExists = true;
        }
        if (errorExists) {
            return false;
        }
        window.location.href = "/HR/GenerateProjectwiseReport/?projectId=" + projectId + "&fromMonth=" + fromMonth + "&toMonth=" + toMonth + "&year=" + year;
    })
</script>