@model EmployeeLeaveManagementApp.Models.LoginModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var details = Model.LeaveDetails;

}
<style>
.Highlighted {
   background-color : Green !important;
   background-image :none !important;
   color: White !important;
   font-weight:bold !important;
   font-size: 12pt;
}

</style>


<section class="content-header">
    <h1>
        Dashboard
        <small>Leave panel</small>
    </h1>
    
</section>
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
                <div class="inner">
                    <h3 class="count" id="txtTotalCount">@Model.TotalLeaveCount</h3>

                    <p>Total Leaves</p>
                </div>
                <div class="icon">
                    <i class="ion ion-bag"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
                <div class="inner">
                    <h3  class="count" id="txtRemainingLeaves">@Model.TotalLeft </h3>
                    <p>Remaining</p>
                </div>
                <div class="icon">
                    <i class="ion ion-stats-bars"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-yellow">
                <div class="inner">
                    <h3  class="count" id="txtSpentLeaves">@Model.TotalSpent</h3>

                    <p>Spent</p>
                </div>
                <div class="icon">
                    <i class="ion ion-pie-graph"></i>
                </div>
                <a href="@Url.Action("LeaveTransaction", "LeaveTransaction")" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-red">
                <div class="inner">
                    <h3  class="count" id="txtLeavesTaken">@Model.TotalApplied</h3>

                    <p>Applied Leaves</p>
                </div>
                <div class="icon">
                    <i class="fa fa-calendar"></i>
                </div>
                <a href="@Url.Action("ApplyLeave", "ApplyLeave")" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div>
        <!-- ./col -->
      
        <!-- ./col -->
    </div>
    <!-- /.row -->
    <!-- Main row -->
    <div class="row">
        <!-- Left col -->
      
        <!-- /.Left col -->
        <!-- right col (We are only adding the ID to make the widgets sortable)-->
       
        <div class="col-md-8" >
            <div class="box" style="border-radius:17px;">
                <div class="box-header with-border">
                    <h3 class="box-title">Leave Report</h3>

                    @*<div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>*@
                        <div class="btn-group pull-right">
                            @*<button type="" class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown">
                                @*<i class="fa fa-wrench"></i>
                            </button>*@
                           <select id="ddlYear">
                               <option>@DateTime.Now.Year</option>
                               <option>@DateTime.Now.AddYears(1).Year</option>
                           </select>
                        @*</div>*@
                        @*<button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>*@
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-8">
                            <p class="text-center">
                                <strong>Jan,<span id="fromYearSpan">@DateTime.Now.Year</span> - Dec, <span id="toYearSpan">@DateTime.Now.Year</span></strong>
                            </p>

                            <div class="chart" style="width: 138%;">
                                <!-- Sales Chart Canvas -->
                                <canvas id="salesChart" style="height: 203px; width: 645px;" ></canvas>
                            </div>
                            <!-- /.chart-responsive -->
                        </div>
                        <!-- /.col -->
                  
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                </div>
                <!-- ./box-body -->
             
                <!-- /.box-footer -->
            </div>
            <!-- /.box -->
        </div>
       
        <section class="col-lg-4 connectedSortable ui-sortable">

            <!-- Calendar -->
            <div class="box box-solid bg-green-gradient" style="border-radius:17px">
                <div class="box-header ui-sortable-handle" style="cursor: move;">
                    <i class="fa fa-calendar"></i>

                    <h3 class="box-title">Calendar</h3>
                    <!-- tools box -->
                    @*<div class="pull-right box-tools">
                        <!-- button with a dropdown -->
                      
                        <button type="button" class="btn btn-success btn-sm" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-success btn-sm" data-widget="remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>*@
                    <!-- /. tools -->
                </div>
                <!-- /.box-header -->
                <div class="box-body no-padding">
                    <!--The calendar -->
                    <div id="calendar" style="width: 100%"><div class="datepicker datepicker-inline"></div>
                                   </div>
                <!-- /.box-body -->
               
            </div>
            <!-- /.box -->
                </div>

        </section>
        <!-- right col -->
    </div>
    <!-- /.row (main row) -->
    <div class="row">
        <div class="col-md-4">
            <div class="box box-solid" style="height:360px">
                <div class="box-header with-border">
                    <i class="fa fa-text-width"></i>
                    <h3 class="box-title">Quote of the day</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <blockquote style="height:300px">
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                        <small>Someone famous in <cite title="Source Title">Source Title</cite></small>
                    </blockquote>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <div class="col-md-8">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Announcements &amp; Events</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                   
                    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                            <li data-target="#carousel-example-generic" data-slide-to="1" class=""></li>
                            <li data-target="#carousel-example-generic" data-slide-to="2" class=""></li>
                        </ol>

                        <div class="carousel-inner">
@for (var i = 0; i < Model.Announcements.Count; i++)
{

    if (i == 0)
    {
        <div class="item active">
            <img src="@Model.Announcements[i].ImagePath"
                 alt="First slide" style="object-fit:cover;object-position:center; height:300px; width:100%">
            <div class="carousel-caption">
                @Model.Announcements[i].Title
            </div>
        </div>
    }
    else
    {
        <div class="item">
            <img src="@Model.Announcements[i].ImagePath"
                 alt="First slide" style="object-fit:cover;object-position:center; height:300px; width:100%">
            <div class="carousel-caption">
                @Model.Announcements[i].Title
            </div>
        </div>
    }
                  
                }
            </div>

                        <a class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                            <span class="fa fa-angle-left"></span>
                        </a>
                        <a class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                            <span class="fa fa-angle-right"></span>
                        </a>
                    </div>
                 
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>

 
    </div>
   
</section>
<script type="text/javascript">
    $(document).ready(function () {
        //var name = $('.Login_name').text();
            var SelectedDates = {};
            SelectedDates[new Date('12/12/2016')] = new Date('12/12/2016');
            SelectedDates[new Date('05/04/2016')] = new Date('05/04/2016');
            SelectedDates[new Date('06/06/2016')] = new Date('06/06/2016');

            $('#calendar').datepicker({
                todayHighlight: true,
                beforeShowDay: function (date) {
                    var Highlight = SelectedDates[date];
                    if (Highlight) {
                        return [true, "Highlighted", Highlight];
                    }
                    else {
                        return [true, '', ''];
                    }
                }
            });
        var userName = '@Model.UserName'.toString();
        $(".Login_Name").text(userName).show();
        $("#DOJ").text('@Model.FormattedDate');
        $("#DashB").focus();
        $("#Role").text('@Model.RoleName');
        $('.count').each(function () {
            $(this).prop('Counter', 0).animate({
                Counter: $(this).text()
            }, {
                duration: 1750,
                easing: 'swing',
                step: function (now) {
                    $(this).text(Math.ceil(now));
                }
            });
        });
    });

    //-----------------------
    //- MONTHLY SALES CHART -
    //-----------------------
    // Get context with jQuery - using jQuery's .get() method.
    var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
     //This will get the first returned node in the jQuery collection.
    var salesChart = new Chart(salesChartCanvas);

    var salesChartData = {
        labels: ["January", "February", "March", "April", "May", "June", "July","August","September","October","November","December"],
        datasets: [
          
          {
              label: "Leave Report",
              fillColor: "rgba(60,141,188,0.9)",
              strokeColor: "rgba(60,141,188,0.8)",
              pointColor: "#3b8bba",
              pointStrokeColor: "rgba(60,141,188,1)",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(60,141,188,1)",
              data: [@details.Jan, @details.Feb,@details.Mar,@details.Apr, @details.May,@details.Jun,@details.Jul,@details.Aug,@details.Sep,@details.Oct,@details.Nov,@details.Dec]
          }
        ]
    };

    var salesChartOptions = {
        //Boolean - If we should show the scale at all
        showScale: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: false,
        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,
        //Boolean - Whether the line is curved between points
        bezierCurve: true,
        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.3,
        //Boolean - Whether to show a dot for each point
        pointDot: false,
        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,
        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,
        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,
        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,
        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,
        //Boolean - Whether to fill the dataset with a color
        datasetFill: true,
        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%=datasets[i].label%></li><%}%></ul>",
        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        maintainAspectRatio: true,
        //Boolean - whether to make the chart responsive to window resizing
        responsive: true
    };

    //Create the line chart
    salesChart.Line(salesChartData, salesChartOptions);

    //---------------------------
    //- END MONTHLY SALES CHART -
    //---------------------------

    //$(function () {
    //    var modelbox = function () {
    //        $("#modalbox").modal("show");
    //    };
    //    $("#btnaddperson").on('click', modelbox);
    //});
    $("#ddlYear").change(function (e) {
        GetDashboardDetails();
    });
        function GetDashboardDetails()
        {
            var year = $("#ddlYear").val();
            $("#fromYearSpan").html(year);
            $("#toYearSpan").html(year);
        $.ajax({
            cache: false,
            type: 'post',
            url: '/Account/GetLeaveReportDetails',
            data: { year: year },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (details) {
                debugger;
                var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
                // This will get the first returned node in the jQuery collection.
                var salesChart = new Chart(salesChartCanvas);
                var salesChartData = {
                    labels: ["January", "February", "March", "April", "May", "June", "July","August","September","October","November","December"],
                    datasets: [
          
                      {
                          label: "Leave Report",
                          fillColor: "rgba(60,141,188,0.9)",
                          strokeColor: "rgba(60,141,188,0.8)",
                          pointColor: "#3b8bba",
                          pointStrokeColor: "rgba(60,141,188,1)",
                          pointHighlightFill: "#fff",
                          pointHighlightStroke: "rgba(60,141,188,1)",

                          data: [details.result!=null?details.result.Jan:0,details.result!=null? details.result.Feb:0, details.result!=null?details.result.Mar:0,details.result!=null? details.result.Apr:0, details.result!=null?details.result.May:0, details.result!=null?details.result.Jun:0, details.result!=null?details.result.Jul:0, details.result!=null?details.result.Aug:0, details.result!=null?details.result.Sep:0,details.result!=null? details.result.Oct:0,details.result!=null? details.result.Nov:0,details.result!=null? details.result.Dec:0]
                      }
                    ]
                };
                var salesChartOptions = {
                    //Boolean - If we should show the scale at all
                    showScale: true,
                    //Boolean - Whether grid lines are shown across the chart
                    scaleShowGridLines: false,
                    //String - Colour of the grid lines
                    scaleGridLineColor: "rgba(0,0,0,.05)",
                    //Number - Width of the grid lines
                    scaleGridLineWidth: 1,
                    //Boolean - Whether to show horizontal lines (except X axis)
                    scaleShowHorizontalLines: true,
                    //Boolean - Whether to show vertical lines (except Y axis)
                    scaleShowVerticalLines: true,
                    //Boolean - Whether the line is curved between points
                    bezierCurve: true,
                    //Number - Tension of the bezier curve between points
                    bezierCurveTension: 0.3,
                    //Boolean - Whether to show a dot for each point
                    pointDot: false,
                    //Number - Radius of each point dot in pixels
                    pointDotRadius: 4,
                    //Number - Pixel width of point dot stroke
                    pointDotStrokeWidth: 1,
                    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                    pointHitDetectionRadius: 20,
                    //Boolean - Whether to show a stroke for datasets
                    datasetStroke: true,
                    //Number - Pixel width of dataset stroke
                    datasetStrokeWidth: 2,
                    //Boolean - Whether to fill the dataset with a color
                    datasetFill: true,
                    //String - A legend template
                    legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%=datasets[i].label%></li><%}%></ul>",
                    //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                    maintainAspectRatio: true,
                    //Boolean - whether to make the chart responsive to window resizing
                    responsive: true
                };

                //Create the line chart
                salesChart.Line(salesChartData, salesChartOptions);
            }
        });
        };
</script>