<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Err_AdvanceLeaveBalanceMessage" xml:space="preserve">
    <value>Only {0} Advance Leaves(s) are available</value>
  </data>
  <data name="Err_AdvanceLeaveMaxLimit" xml:space="preserve">
    <value>Sorry!! Your max limit for advance leave is</value>
  </data>
  <data name="Err_AvailableCasualLeaves" xml:space="preserve">
    <value>Only {0} Casual Leave(s) are available,Go for Advance Leave/LOP</value>
  </data>
  <data name="Err_CannotApplyCasualOrAdvanceLeave" xml:space="preserve">
    <value>Sorry!!  You cannot Apply for Casual/Advance leave since your manager approves the submitted one</value>
  </data>
  <data name="Err_CannotApplyCompOff" xml:space="preserve">
    <value>Sorry!!  You cannot Apply for Comp Off leave since your manager approves the submitted one</value>
  </data>
  <data name="Err_CannotApplyLOP" xml:space="preserve">
    <value>Sorry!!  You cannot Apply for LOP leave since your manager approves the submitted one</value>
  </data>
  <data name="Err_LeaveAlreadyApplied" xml:space="preserve">
    <value>You have already applied for leave/work from home within this date range</value>
  </data>
  <data name="Err_lopLeaveBalanceMessage" xml:space="preserve">
    <value>Only {0} LOP(s) are available</value>
  </data>
  <data name="Err_LOPMaxLimit" xml:space="preserve">
    <value>Sorry!! Your max limit for LOP is</value>
  </data>
  <data name="Err_NoCasualLeaves" xml:space="preserve">
    <value>No Casual Leaves available</value>
  </data>
  <data name="Err_SelectedDateAlreadyExist" xml:space="preserve">
    <value>The selected date is already existing.Please select new date!!</value>
  </data>
  <data name="Err_SickLeaveAlreadyApplied" xml:space="preserve">
    <value>Sorry!!You already applied for Sick Leave today</value>
  </data>
  <data name="Msg_LeaveAdded" xml:space="preserve">
    <value>Leave request added successfully</value>
  </data>
  <data name="Msg_LeaveAddedForApproval" xml:space="preserve">
    <value>Leave request successfully submitted for approval</value>
  </data>
  <data name="Msg_LeaveDeleted" xml:space="preserve">
    <value>Leave request successfully deleted</value>
  </data>
  <data name="Msg_LOPAdded" xml:space="preserve">
    <value>LOP request added successfully</value>
  </data>
  <data name="Err_AnnouncementFailed" xml:space="preserve">
    <value>Failed to add the announcement.Try again</value>
  </data>
  <data name="Err_EnterAllFields" xml:space="preserve">
    <value>Enter all the fields</value>
  </data>
  <data name="Err_EnterContent" xml:space="preserve">
    <value>please enter content</value>
  </data>
  <data name="Err_EnterRequestTitle" xml:space="preserve">
    <value>Please enter request title</value>
  </data>
  <data name="Err_EnterTitle" xml:space="preserve">
    <value>please enter title</value>
  </data>
  <data name="Err_FieldsCannotEmpty" xml:space="preserve">
    <value>Fields cannot be empty!!</value>
  </data>
  <data name="Err_HolidayDateAlreadyExists" xml:space="preserve">
    <value>The selected date is already existing.Please select new date!!</value>
  </data>
  <data name="Err_LeaveCouldNotRewarded" xml:space="preserve">
    <value>Leave could not be rewarded</value>
  </data>
  <data name="Err_RequestCouldNotCancelled" xml:space="preserve">
    <value>Request could not be cancelled</value>
  </data>
  <data name="Err_RequestCouldNotSent" xml:space="preserve">
    <value>Request could not be sent</value>
  </data>
  <data name="Err_RequestedResourceNumber" xml:space="preserve">
    <value>Number of requested resources must be between 1 and 10</value>
  </data>
  <data name="Err_RequestStatusCouldNotChanged" xml:space="preserve">
    <value>Request status could not be changed</value>
  </data>
  <data name="Err_RequestTitleTooLong" xml:space="preserve">
    <value>Request title too long</value>
  </data>
  <data name="Err_SelectAppropriateValues" xml:space="preserve">
    <value>Please select appropriate values</value>
  </data>
  <data name="Err_SelectNameandLeaveType" xml:space="preserve">
    <value>Select Employee Name,Leave Type and Date Range</value>
  </data>
  <data name="Err_SelectRequiredSkills" xml:space="preserve">
    <value>Please select required skills</value>
  </data>
  <data name="Err_ValueAlreadyExists" xml:space="preserve">
    <value>Value already exists</value>
  </data>
  <data name="Msg_CompanyAnnouncementSaved" xml:space="preserve">
    <value>Company Announcement added successfully</value>
  </data>
  <data name="Msg_EmployeeDetailsSaved" xml:space="preserve">
    <value>Employee details saved successfully</value>
  </data>
  <data name="Msg_HolidayDeleted" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="Msg_HolidaySaved" xml:space="preserve">
    <value>New holiday added successfully</value>
  </data>
  <data name="Msg_HolidayUpdated" xml:space="preserve">
    <value>Successfully done.</value>
  </data>
  <data name="Msg_LeaveApproved" xml:space="preserve">
    <value>Leave request successfully approved</value>
  </data>
  <data name="Msg_LeaveAssigned" xml:space="preserve">
    <value>Leave request successfully assigned</value>
  </data>
  <data name="Msg_LeaveCancelled" xml:space="preserve">
    <value>Leave request Cancelled</value>
  </data>
  <data name="Msg_LeaveRejected" xml:space="preserve">
    <value>Leave request rejected</value>
  </data>
  <data name="Msg_LeaveRewarded" xml:space="preserve">
    <value>Leave rewarded successfully</value>
  </data>
  <data name="Msg_MailSent" xml:space="preserve">
    <value>Mail sent successfully</value>
  </data>
  <data name="Msg_MasterDateSaved" xml:space="preserve">
    <value>Master data value added successfully</value>
  </data>
  <data name="Msg_ProjectDetailsSaved" xml:space="preserve">
    <value>Project details added successfully</value>
  </data>
  <data name="Msg_RequestCancelled" xml:space="preserve">
    <value>Request cancelled successfully</value>
  </data>
  <data name="Msg_RequestSent" xml:space="preserve">
    <value>Request sent successfully</value>
  </data>
  <data name="Msg_RequestStatusChanged" xml:space="preserve">
    <value>Request status changed successfully</value>
  </data>
  <data name="Msg_ResourceAdded" xml:space="preserve">
    <value>New Resource added successfully</value>
  </data>
  <data name="Msg_ResourceRemoved" xml:space="preserve">
    <value>Resource removed successfully</value>
  </data>
  <data name="Msg_WorkFromHomeAdded" xml:space="preserve">
    <value>New WorkFromHome added successfully</value>
  </data>
  <data name="Msg_PasswordChanged" xml:space="preserve">
    <value>Your password changed successfully</value>
  </data>
</root>